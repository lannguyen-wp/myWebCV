{
  "version": 3,
  "sources": ["../../direction/index.js", "../../lodash/now.js", "../../lodash/_trimmedEndIndex.js", "../../lodash/_baseTrim.js", "../../lodash/isSymbol.js", "../../lodash/toNumber.js", "../../lodash/debounce.js", "../../lodash/throttle.js", "../../is-hotkey/lib/index.js", "../../compute-scroll-into-view/src/index.ts", "../../scroll-into-view-if-needed/src/index.ts", "../../slate-dom/src/utils/dom.ts", "../../slate-dom/src/utils/environment.ts", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../slate-dom/src/utils/key.ts", "../../slate-dom/src/utils/weak-maps.ts", "../../slate-dom/src/plugin/dom-editor.ts", "../../slate-dom/src/utils/diff-text.ts", "../../slate-dom/src/utils/lines.ts", "../../slate-dom/src/plugin/with-dom.ts", "../../slate-dom/src/utils/constants.ts", "../../slate-dom/src/utils/hotkeys.ts", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js", "../../slate-dom/src/utils/range-list.ts", "../../@juggle/resize-observer/lib/utils/resizeObservers.js", "../../@juggle/resize-observer/lib/algorithms/hasActiveObservations.js", "../../@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js", "../../@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js", "../../@juggle/resize-observer/lib/ResizeObserverBoxOptions.js", "../../@juggle/resize-observer/lib/utils/freeze.js", "../../@juggle/resize-observer/lib/ResizeObserverSize.js", "../../@juggle/resize-observer/lib/DOMRectReadOnly.js", "../../@juggle/resize-observer/lib/utils/element.js", "../../@juggle/resize-observer/lib/utils/global.js", "../../@juggle/resize-observer/lib/algorithms/calculateBoxSize.js", "../../@juggle/resize-observer/lib/ResizeObserverEntry.js", "../../@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js", "../../@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js", "../../@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js", "../../@juggle/resize-observer/lib/utils/process.js", "../../@juggle/resize-observer/lib/utils/queueMicroTask.js", "../../@juggle/resize-observer/lib/utils/queueResizeObserver.js", "../../@juggle/resize-observer/lib/utils/scheduler.js", "../../@juggle/resize-observer/lib/ResizeObservation.js", "../../@juggle/resize-observer/lib/ResizeObserverDetail.js", "../../@juggle/resize-observer/lib/ResizeObserverController.js", "../../@juggle/resize-observer/lib/ResizeObserver.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../slate-react/src/hooks/use-slate-static.tsx", "../../slate-react/src/plugin/react-editor.ts", "../../slate-react/src/hooks/android-input-manager/android-input-manager.ts", "../../slate-react/src/hooks/use-is-mounted.tsx", "../../slate-react/src/hooks/use-isomorphic-layout-effect.ts", "../../slate-react/src/hooks/use-mutation-observer.ts", "../../slate-react/src/hooks/android-input-manager/use-android-input-manager.ts", "../../slate-react/src/components/string.tsx", "../../slate-react/src/components/leaf.tsx", "../../slate-react/src/components/text.tsx", "../../slate-react/src/components/element.tsx", "../../slate-react/src/hooks/use-decorate.ts", "../../slate-react/src/hooks/use-selected.ts", "../../slate-react/src/hooks/use-children.tsx", "../../slate-react/src/hooks/use-read-only.ts", "../../slate-react/src/hooks/use-slate.tsx", "../../slate-react/src/hooks/use-track-user-input.ts", "../../slate-react/src/components/restore-dom/restore-dom-manager.ts", "../../slate-react/src/components/restore-dom/restore-dom.tsx", "../../slate-react/src/hooks/use-composing.ts", "../../slate-react/src/components/editable.tsx", "../../slate-react/src/hooks/use-focused.ts", "../../slate-react/src/hooks/use-slate-selector.tsx", "../../slate-react/src/utils/environment.ts", "../../slate-react/src/components/slate.tsx", "../../slate-react/src/hooks/use-editor.tsx", "../../slate-react/src/hooks/use-slate-selection.tsx", "../../slate-react/src/plugin/with-react.ts"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = direction\n\nvar RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nvar LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\nvar rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\nvar ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nfunction direction(value) {\n  value = String(value || '')\n\n  if (rtl.test(value)) {\n    return 'rtl'\n  }\n\n  if (ltr.test(value)) {\n    return 'ltr'\n  }\n\n  return 'neutral'\n}\n", "var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n", "var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (value.length > 1 && !modifier && !ALIASES[value] && !CODES[name]) {\n        throw new TypeError('Unknown modifier: \"' + value + '\"');\n      }\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;", "// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n/**\n * This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\n * @public\n */\nexport type ScrollMode = 'always' | 'if-needed'\n\n/** @public */\nexport interface Options {\n  /**\n   * Control the logical scroll position on the y-axis. The spec states that the `block` direction is related to the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode), but this is not implemented yet in this library.\n   * This means that `block: 'start'` aligns to the top edge and `block: 'end'` to the bottom.\n   * @defaultValue 'center'\n   */\n  block?: ScrollLogicalPosition\n  /**\n   * Like `block` this is affected by the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode). In left-to-right pages `inline: 'start'` will align to the left edge. In right-to-left it should be flipped. This will be supported in a future release.\n   * @defaultValue 'nearest'\n   */\n  inline?: ScrollLogicalPosition\n  /**\n   * This is a proposed addition to the spec that you can track here: https://github.com/w3c/csswg-drafts/pull/5677\n   *\n   * This library will be updated to reflect any changes to the spec and will provide a migration path.\n   * To be backwards compatible with `Element.scrollIntoViewIfNeeded` if something is not 100% visible it will count as \"needs scrolling\". If you need a different visibility ratio your best option would be to implement an [Intersection Observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API).\n   * @defaultValue 'always'\n   */\n  scrollMode?: ScrollMode\n  /**\n   * By default there is no boundary. All the parent elements of your target is checked until it reaches the viewport ([`document.scrollingElement`](https://developer.mozilla.org/en-US/docs/Web/API/document/scrollingElement)) when calculating layout and what to scroll.\n   * By passing a boundary you can short-circuit this loop depending on your needs:\n   * \n   * - Prevent the browser window from scrolling.\n   * - Scroll elements into view in a list, without scrolling container elements.\n   * \n   * You can also pass a function to do more dynamic checks to override the scroll scoping:\n   * \n   * ```js\n   * let actions = compute(target, {\n   *   boundary: (parent) => {\n   *     // By default `overflow: hidden` elements are allowed, only `overflow: visible | clip` is skipped as\n   *     // this is required by the CSSOM spec\n   *     if (getComputedStyle(parent)['overflow'] === 'hidden') {\n   *       return false\n   *     }\n\n   *     return true\n   *   },\n   * })\n   * ```\n   * @defaultValue null\n   */\n  boundary?: Element | ((parent: Element) => boolean) | null\n  /**\n   * New option that skips auto-scrolling all nodes with overflow: hidden set\n   * See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\n   * @defaultValue false\n   * @public\n   */\n  skipOverflowHiddenElements?: boolean\n}\n\n/** @public */\nexport interface ScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nconst isElement = (el: any): el is Element =>\n  typeof el === 'object' && el != null && el.nodeType === 1\n\nconst canOverflow = (\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) => {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nconst getFrameElement = (el: Element) => {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nconst isHiddenByFrame = (el: Element): boolean => {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nconst isScrollable = (el: Element, skipOverflowHiddenElements?: boolean) => {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nconst alignNearest = (\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) => {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nconst getParentElement = (element: Node): Element | null => {\n  const parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\nconst getScrollMargins = (target: Element) => {\n  const computedStyle = window.getComputedStyle(target)\n  return {\n    top: parseFloat(computedStyle.scrollMarginTop) || 0,\n    right: parseFloat(computedStyle.scrollMarginRight) || 0,\n    bottom: parseFloat(computedStyle.scrollMarginBottom) || 0,\n    left: parseFloat(computedStyle.scrollMarginLeft) || 0,\n  }\n}\n\n/** @public */\nexport const compute = (target: Element, options: Options): ScrollAction[] => {\n  if (typeof document === 'undefined') {\n    // If there's no DOM we assume it's not in a browser environment\n    return []\n  }\n\n  const { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = window.visualViewport?.width ?? innerWidth\n  const viewportHeight = window.visualViewport?.height ?? innerHeight\n  const { scrollX, scrollY } = window\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n  const {\n    top: marginTop,\n    right: marginRight,\n    bottom: marginBottom,\n    left: marginLeft,\n  } = getScrollMargins(target)\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop - marginTop\n      : block === 'end'\n      ? targetBottom + marginBottom\n      : targetTop + targetHeight / 2 - marginTop + marginBottom // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2 - marginLeft + marginRight\n      : inline === 'end'\n      ? targetRight + marginRight\n      : targetLeft - marginLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: ScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      // scrollingElement is added to the frames array even if it's not scrollable, in which case checking its bounds is not required\n      ((frame === scrollingElement && !isScrollable(frame)) ||\n        (targetTop >= top &&\n          targetBottom <= bottom &&\n          targetLeft >= left &&\n          targetRight <= right))\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    const scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    const scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          scrollY,\n          scrollY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          scrollY + targetBlock,\n          scrollY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          scrollX,\n          scrollX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          scrollX + targetInline,\n          scrollX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + scrollY)\n      inlineScroll = Math.max(0, inlineScroll + scrollX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll =\n        scaleY === 0\n          ? 0\n          : Math.max(\n              0,\n              Math.min(\n                scrollTop + blockScroll / scaleY,\n                frame.scrollHeight - height / scaleY + scrollbarHeight\n              )\n            )\n      inlineScroll =\n        scaleX === 0\n          ? 0\n          : Math.max(\n              0,\n              Math.min(\n                scrollLeft + inlineScroll / scaleX,\n                frame.scrollWidth - width / scaleX + scrollbarWidth\n              )\n            )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n", "import { compute } from 'compute-scroll-into-view'\nimport type {\n  Options as BaseOptions,\n  ScrollAction,\n} from 'compute-scroll-into-view'\n\n/** @public */\nexport type Options<T = unknown> =\n  | StandardBehaviorOptions\n  | CustomBehaviorOptions<T>\n\n/**\n * Only scrolls if the `node` is partially out of view:\n * ```ts\n * scrollIntoView(node, { scrollMode: 'if-needed' })\n * ```\n * Skips scrolling `overflow: hidden` elements:\n * ```ts\n * scrollIntoView(node, { skipOverflowHiddenElements: true })\n * ```\n * When scrolling is needed do the least and smoothest scrolling possible:\n * ```ts\n * scrollIntoView(node, {\n *   behavior: 'smooth',\n *   scrollMode: 'if-needed',\n *   block: 'nearest',\n *   inline: 'nearest',\n * })\n * ```\n * @public\n */\nexport interface StandardBehaviorOptions extends BaseOptions {\n  /**\n   * @defaultValue 'auto\n   */\n  behavior?: ScrollBehavior\n}\n\n/** @public */\nexport interface CustomBehaviorOptions<T = unknown> extends BaseOptions {\n  behavior: CustomScrollBehaviorCallback<T>\n}\n\n/** @public */\nexport type CustomScrollBehaviorCallback<T = unknown> = (\n  actions: ScrollAction[]\n) => T\n\nconst isStandardScrollBehavior = (\n  options: any\n): options is StandardBehaviorOptions =>\n  options === Object(options) && Object.keys(options).length !== 0\n\nconst isCustomScrollBehavior = <T = unknown>(\n  options: any\n): options is CustomBehaviorOptions<T> =>\n  typeof options === 'object' ? typeof options.behavior === 'function' : false\n\nconst getOptions = (options: any): StandardBehaviorOptions => {\n  // Handle alignToTop for legacy reasons, to be compatible with the spec\n  if (options === false) {\n    return { block: 'end', inline: 'nearest' }\n  }\n\n  if (isStandardScrollBehavior(options)) {\n    // compute.ts ensures the defaults are block: 'center' and inline: 'nearest', to conform to the spec\n    return options\n  }\n\n  // if options = {}, options = true or options = null, based on w3c web platform test\n  return { block: 'start', inline: 'nearest' }\n}\n\nconst getScrollMargins = (target: Element) => {\n  const computedStyle = window.getComputedStyle(target)\n  return {\n    top: parseFloat(computedStyle.scrollMarginTop) || 0,\n    right: parseFloat(computedStyle.scrollMarginRight) || 0,\n    bottom: parseFloat(computedStyle.scrollMarginBottom) || 0,\n    left: parseFloat(computedStyle.scrollMarginLeft) || 0,\n  }\n}\n\n// Determine if the element is part of the document (including shadow dom)\n// Derived from code of Andy Desmarais\n// https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\nconst isInDocument = (element: Node) => {\n  let currentElement = element\n  while (currentElement && currentElement.parentNode) {\n    if (currentElement.parentNode === document) {\n      return true\n    } else if (currentElement.parentNode instanceof ShadowRoot) {\n      currentElement = (currentElement.parentNode as ShadowRoot).host\n    } else {\n      currentElement = currentElement.parentNode\n    }\n  }\n  return false\n}\n\n/**\n * Scrolls the given element into view, with options for when, and how.\n * Supports the same `options` as [`Element.prototype.scrollIntoView`](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView) with additions such as `scrollMode`, `behavior: Function` and `skipOverflowHiddenElements`.\n * @public\n */\nfunction scrollIntoView(\n  target: Element,\n  options?: StandardBehaviorOptions | boolean\n): void\n/**\n * Scrolls the given element into view, with options for when, and how.\n * Supports the same `options` as [`Element.prototype.scrollIntoView`](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView) with additions such as `scrollMode`, `behavior: Function` and `skipOverflowHiddenElements`.\n *\n * You can set the expected return type for `behavior: Function`:\n * ```ts\n * await scrollIntoView<Promise<boolean[]>>(node, {\n *   behavior: async actions => {\n *     return Promise.all(actions.map(\n *       // animate() resolves to `true` if anything was animated, `false` if the element already were in the end state\n *       ({ el, left, top }) => animate(el, {scroll: {left, top}})\n *     ))\n *   }\n * })\n * ```\n * @public\n */\nfunction scrollIntoView<T>(\n  target: Element,\n  options: CustomBehaviorOptions<T>\n): T\nfunction scrollIntoView<T = unknown>(\n  target: Element,\n  options?: StandardBehaviorOptions | CustomBehaviorOptions<T> | boolean\n): T | void {\n  // Browsers treats targets that aren't in the dom as a no-op and so should we\n  if (!target.isConnected || !isInDocument(target)) {\n    return\n  }\n\n  const margins = getScrollMargins(target)\n\n  if (isCustomScrollBehavior<T>(options)) {\n    return options.behavior(compute(target, options))\n  }\n\n  const behavior = typeof options === 'boolean' ? undefined : options?.behavior\n\n  for (const { el, top, left } of compute(target, getOptions(options))) {\n    const adjustedTop = top - margins.top + margins.bottom\n    const adjustedLeft = left - margins.left + margins.right\n    el.scroll({ top: adjustedTop, left: adjustedLeft, behavior })\n  }\n}\n\nexport default scrollIntoView\n", "/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nimport { DOMEditor } from '../plugin/dom-editor'\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: (typeof Selection)['constructor']\n    DataTransfer: (typeof DataTransfer)['constructor']\n    Node: (typeof Node)['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines whether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = (node: Node | null) => {\n  let parent = node && node.parentNode\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true\n    }\n    parent = parent.parentNode\n  }\n  return false\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (\n  dataTransfer: DataTransfer,\n  clipboardFormatKey = 'x-slate-fragment'\n): DataTransfer => {\n  if (!dataTransfer.getData(`application/${clipboardFormatKey}`)) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData(`application/${clipboardFormatKey}`, fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n\n/**\n * Get the dom selection from Shadow Root if possible, otherwise from the document\n */\nexport const getSelection = (root: Document | ShadowRoot): Selection | null => {\n  if (root.getSelection != null) {\n    return root.getSelection()\n  }\n  return document.getSelection()\n}\n\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\n\nexport const isTrackedMutation = (\n  editor: DOMEditor,\n  mutation: MutationRecord,\n  batch: MutationRecord[]\n): boolean => {\n  const { target } = mutation\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false\n  }\n\n  const { document } = DOMEditor.getWindow(editor)\n  if (document.contains(target)) {\n    return DOMEditor.hasDOMNode(editor, target, { editable: true })\n  }\n\n  const parentMutation = batch.find(({ addedNodes, removedNodes }) => {\n    for (const node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n\n    for (const node of removedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n  })\n\n  if (!parentMutation || parentMutation === mutation) {\n    return false\n  }\n\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch)\n}\n\n/**\n * Retrieves the deepest active element in the DOM, considering nested shadow DOMs.\n */\nexport const getActiveElement = () => {\n  let activeElement = document.activeElement\n\n  while (activeElement?.shadowRoot && activeElement.shadowRoot?.activeElement) {\n    activeElement = activeElement?.shadowRoot?.activeElement\n  }\n\n  return activeElement\n}\n\n/**\n * @returns `true` if `otherNode` is before `node` in the document; otherwise, `false`.\n */\nexport const isBefore = (node: DOMNode, otherNode: DOMNode): boolean =>\n  Boolean(\n    node.compareDocumentPosition(otherNode) &\n      DOMNode.DOCUMENT_POSITION_PRECEDING\n  )\n\n/**\n * @returns `true` if `otherNode` is after `node` in the document; otherwise, `false`.\n */\nexport const isAfter = (node: DOMNode, otherNode: DOMNode): boolean =>\n  Boolean(\n    node.compareDocumentPosition(otherNode) &\n      DOMNode.DOCUMENT_POSITION_FOLLOWING\n  )\n", "export const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_WEBKIT =\n  typeof navigator !== 'undefined' &&\n  /AppleWebKit(?!.*Chrome)/i.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_ANDROID_CHROME_LEGACY =\n  IS_ANDROID &&\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-5]?\\d)(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser (not including mac wechat)\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' &&\n  /.*Wechat/.test(navigator.userAgent) &&\n  !/.*MacWechat/.test(navigator.userAgent) // avoid lookbehind (buggy in safari < 16.4)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// Check if the browser is Safari and older than 17\nexport const IS_SAFARI_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Safari/.test(navigator.userAgent) &&\n  /Version\\/(\\d+)/.test(navigator.userAgent) &&\n  (navigator.userAgent.match(/Version\\/(\\d+)/)?.[1]\n    ? parseInt(navigator.userAgent.match(/Version\\/(\\d+)/)?.[1]!, 10) < 17\n    : false)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  (!IS_CHROME_LEGACY || !IS_ANDROID_CHROME_LEGACY) &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n", "export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n", "import {\n  Ancestor,\n  Editor,\n  Node,\n  Operation,\n  Point,\n  Range,\n  RangeRef,\n  Text,\n} from 'slate'\nimport { TextDiff } from './diff-text'\nimport { Key } from './key'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\nexport const IS_NODE_MAP_DIRTY: WeakMap<Editor, boolean> = new WeakMap()\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER_ELEMENT: WeakMap<Editor, HTMLElement> =\n  new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<Editor, RangeRef | null> =\n  new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<\n  Editor,\n  (options?: { operation?: Operation }) => void\n>()\n\n/**\n * Weak maps for saving pending state on composition stage.\n */\n\nexport const EDITOR_TO_SCHEDULE_FLUSH: WeakMap<Editor, () => void> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_INSERTION_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\nexport const EDITOR_TO_USER_MARKS: WeakMap<Editor, Partial<Text> | null> =\n  new WeakMap()\n\n/**\n * Android input handling specific weak-maps\n */\n\nexport const EDITOR_TO_PENDING_DIFFS: WeakMap<Editor, TextDiff[]> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_ACTION: WeakMap<Editor, Action | null> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_SELECTION: WeakMap<Editor, Range | null> =\n  new WeakMap()\n\nexport const EDITOR_TO_FORCE_RENDER: WeakMap<Editor, () => void> = new WeakMap()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = Symbol('placeholder') as unknown as string\nexport const MARK_PLACEHOLDER_SYMBOL = Symbol(\n  'mark-placeholder'\n) as unknown as string\n", "import {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Path,\n  Point,\n  Range,\n  Scrubber,\n  Transforms,\n} from 'slate'\nimport { TextDiff } from '../utils/diff-text'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  DOMText,\n  getSelection,\n  hasShadowRoot,\n  isAfter,\n  isBefore,\n  isDOMElement,\n  isDOMNode,\n  isDOMSelection,\n  normalizeDOMPoint,\n} from '../utils/dom'\nimport { IS_ANDROID, IS_CHROME, IS_FIREFOX } from '../utils/environment'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\n\n/**\n * A DOM-specific version of the `Editor` interface.\n */\n\nexport interface DOMEditor extends BaseEditor {\n  hasEditableTarget: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasRange: (editor: DOMEditor, range: Range) => boolean\n  hasSelectableTarget: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => boolean\n  hasTarget: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  isTargetInsideNonReadonlyVoid: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n}\n\nexport interface DOMEditorInterface {\n  /**\n   * Experimental and android specific: Get pending diffs\n   */\n  androidPendingDiffs: (editor: Editor) => TextDiff[] | undefined\n\n  /**\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\n   */\n  androidScheduleFlush: (editor: Editor) => void\n\n  /**\n   * Blur the editor.\n   */\n  blur: (editor: DOMEditor) => void\n\n  /**\n   * Deselect the editor.\n   */\n  deselect: (editor: DOMEditor) => void\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n  findDocumentOrShadowRoot: (editor: DOMEditor) => Document | ShadowRoot\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n  findEventRange: (editor: DOMEditor, event: any) => Range\n\n  /**\n   * Find a key for a Slate node.\n   */\n  findKey: (editor: DOMEditor, node: Node) => Key\n\n  /**\n   * Find the path of Slate node.\n   */\n  findPath: (editor: DOMEditor, node: Node) => Path\n\n  /**\n   * Focus the editor.\n   */\n  focus: (editor: DOMEditor, options?: { retries: number }) => void\n\n  /**\n   * Return the host window of the current editor.\n   */\n  getWindow: (editor: DOMEditor) => Window\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n  hasDOMNode: (\n    editor: DOMEditor,\n    target: DOMNode,\n    options?: { editable?: boolean }\n  ) => boolean\n\n  /**\n   * Check if the target is editable and in the editor.\n   */\n  hasEditableTarget: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   *\n   */\n  hasRange: (editor: DOMEditor, range: Range) => boolean\n\n  /**\n   * Check if the target can be selectable\n   */\n  hasSelectableTarget: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Check if the target is in the editor.\n   */\n  hasTarget: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n  insertData: (editor: DOMEditor, data: DataTransfer) => void\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n  insertFragmentData: (editor: DOMEditor, data: DataTransfer) => boolean\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n  insertTextData: (editor: DOMEditor, data: DataTransfer) => boolean\n\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n  isComposing: (editor: DOMEditor) => boolean\n\n  /**\n   * Check if the editor is focused.\n   */\n  isFocused: (editor: DOMEditor) => boolean\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n  isReadOnly: (editor: DOMEditor) => boolean\n\n  /**\n   * Check if the target is inside void and in an non-readonly editor.\n   */\n  isTargetInsideNonReadonlyVoid: (\n    editor: DOMEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n  setFragmentData: (\n    editor: DOMEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n  toDOMNode: (editor: DOMEditor, node: Node) => HTMLElement\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n  toDOMPoint: (editor: DOMEditor, point: Point) => DOMPoint\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n  toDOMRange: (editor: DOMEditor, range: Range) => DOMRange\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n  toSlateNode: (editor: DOMEditor, domNode: DOMNode) => Node\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n  toSlatePoint: <T extends boolean>(\n    editor: DOMEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n      /**\n       * The direction to search for Slate leaf nodes if `domPoint` is\n       * non-editable and non-void.\n       */\n      searchDirection?: 'forward' | 'backward'\n    }\n  ) => T extends true ? Point | null : Point\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n  toSlateRange: <T extends boolean>(\n    editor: DOMEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ) => T extends true ? Range | null : Range\n}\n\n// eslint-disable-next-line no-redeclare\nexport const DOMEditor: DOMEditorInterface = {\n  androidPendingDiffs: editor => EDITOR_TO_PENDING_DIFFS.get(editor),\n\n  androidScheduleFlush: editor => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(editor)?.()\n  },\n\n  blur: editor => {\n    const el = DOMEditor.toDOMNode(editor, editor)\n    const root = DOMEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  deselect: editor => {\n    const { selection } = editor\n    const root = DOMEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = getSelection(root)\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  findDocumentOrShadowRoot: editor => {\n    const el = DOMEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (root instanceof Document || root instanceof ShadowRoot) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  findEventRange: (editor, event) => {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = DOMEditor.toSlateNode(editor, event.target)\n    const path = DOMEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = DOMEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = DOMEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  findKey: (editor, node) => {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  findPath: (editor, node) => {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${Scrubber.stringify(node)}`\n    )\n  },\n\n  focus: (editor, options = { retries: 5 }) => {\n    // Return if already focused\n    if (IS_FOCUSED.get(editor)) {\n      return\n    }\n\n    // Retry setting focus if the editor has pending operations.\n    // The DOM (selection) is unstable while changes are applied.\n    // Retry until retries are exhausted or editor is focused.\n    if (options.retries <= 0) {\n      throw new Error(\n        'Could not set focus, editor seems stuck with pending operations'\n      )\n    }\n    if (editor.operations.length > 0) {\n      setTimeout(() => {\n        DOMEditor.focus(editor, { retries: options.retries - 1 })\n      }, 10)\n      return\n    }\n\n    const el = DOMEditor.toDOMNode(editor, editor)\n    const root = DOMEditor.findDocumentOrShadowRoot(editor)\n    if (root.activeElement !== el) {\n      // Ensure that the DOM selection state is set to the editor's selection\n      if (editor.selection && root instanceof Document) {\n        const domSelection = getSelection(root)\n        const domRange = DOMEditor.toDOMRange(editor, editor.selection)\n        domSelection?.removeAllRanges()\n        domSelection?.addRange(domRange)\n      }\n      // Create a new selection in the top of the document if missing\n      if (!editor.selection) {\n        Transforms.select(editor, Editor.start(editor, []))\n      }\n      // IS_FOCUSED should be set before calling el.focus() to ensure that\n      // FocusedContext is updated to the correct value\n      IS_FOCUSED.set(editor, true)\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  getWindow: editor => {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  hasDOMNode: (editor, target, options = {}) => {\n    const { editable = false } = options\n    const editorEl = DOMEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (\n        isDOMElement(target) ? target : target.parentElement\n      ) as HTMLElement\n    } catch (err) {\n      if (\n        err instanceof Error &&\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  hasEditableTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) &&\n    DOMEditor.hasDOMNode(editor, target, { editable: true }),\n\n  hasRange: (editor, range) => {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n\n  hasSelectableTarget: (editor, target) =>\n    DOMEditor.hasEditableTarget(editor, target) ||\n    DOMEditor.isTargetInsideNonReadonlyVoid(editor, target),\n\n  hasTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) && DOMEditor.hasDOMNode(editor, target),\n\n  insertData: (editor, data) => {\n    editor.insertData(data)\n  },\n\n  insertFragmentData: (editor, data) => editor.insertFragmentData(data),\n\n  insertTextData: (editor, data) => editor.insertTextData(data),\n\n  isComposing: editor => {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  isFocused: editor => !!IS_FOCUSED.get(editor),\n\n  isReadOnly: editor => !!IS_READ_ONLY.get(editor),\n\n  isTargetInsideNonReadonlyVoid: (editor, target) => {\n    if (IS_READ_ONLY.get(editor)) return false\n\n    const slateNode =\n      DOMEditor.hasTarget(editor, target) &&\n      DOMEditor.toSlateNode(editor, target)\n    return Element.isElement(slateNode) && Editor.isVoid(editor, slateNode)\n  },\n\n  setFragmentData: (editor, data, originEvent) =>\n    editor.setFragmentData(data, originEvent),\n\n  toDOMNode: (editor, node) => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(DOMEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${Scrubber.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  toDOMPoint: (editor, point) => {\n    const [node] = Editor.node(editor, point.path)\n    const el = DOMEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (let i = 0; i < texts.length; i++) {\n      const text = texts[i]\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      const nextText = texts[i + 1]\n      if (\n        point.offset === end &&\n        nextText?.hasAttribute('data-slate-mark-placeholder')\n      ) {\n        const domText = nextText.childNodes[0]\n\n        domPoint = [\n          // COMPAT: If we don't explicity set the dom point to be on the actual\n          // dom text element, chrome will put the selection behind the actual dom\n          // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n          // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n          // which will cause issues when scrolling to it.\n          domText instanceof DOMText ? domText : nextText,\n          nextText.textContent?.startsWith('\\uFEFF') ? 1 : 0,\n        ]\n        break\n      }\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${Scrubber.stringify(\n          point\n        )}`\n      )\n    }\n\n    return domPoint\n  },\n\n  toDOMRange: (editor, range) => {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = DOMEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : DOMEditor.toDOMPoint(editor, focus)\n\n    const window = DOMEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (\n      isDOMElement(startNode) ? startNode : startNode.parentElement\n    ) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (\n      isDOMElement(endNode) ? endNode : endNode.parentElement\n    ) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  toSlateNode: (editor, domNode) => {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  toSlatePoint: <T extends boolean>(\n    editor: DOMEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n      searchDirection?: 'forward' | 'backward'\n    }\n  ): T extends true ? Point | null : Point => {\n    const { exactMatch, suppressThrow, searchDirection = 'backward' } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = DOMEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      const potentialNonEditableNode = parentNode.closest(\n        '[contenteditable=\"false\"]'\n      )\n      const nonEditableNode =\n        potentialNonEditableNode && editorEl.contains(potentialNonEditableNode)\n          ? potentialNonEditableNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = DOMEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (\n              IS_ANDROID &&\n              !exactMatch &&\n              el.hasAttribute('data-slate-zero-width') &&\n              el.textContent.length > 0 &&\n              el.textContext !== '\\uFEFF'\n            ) {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1)\n              }\n\n              return\n            }\n\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-dom\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        const leafNodes = voidNode.querySelectorAll('[data-slate-leaf]')\n        for (let index = 0; index < leafNodes.length; index++) {\n          const current = leafNodes[index]\n          if (DOMEditor.hasDOMNode(editor, current)) {\n            leafNode = current\n            break\n          }\n        }\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      } else if (nonEditableNode) {\n        // Find the edge of the nearest leaf in `searchDirection`\n        const getLeafNodes = (node: DOMElement | null | undefined) =>\n          node\n            ? node.querySelectorAll(\n                // Exclude leaf nodes in nested editors\n                '[data-slate-leaf]:not(:scope [data-slate-editor] [data-slate-leaf])'\n              )\n            : []\n        const elementNode = nonEditableNode.closest(\n          '[data-slate-node=\"element\"]'\n        )\n\n        if (searchDirection === 'forward') {\n          const leafNodes = [\n            ...getLeafNodes(elementNode),\n            ...getLeafNodes(elementNode?.nextElementSibling),\n          ]\n          leafNode =\n            leafNodes.find(leaf => isAfter(nonEditableNode, leaf)) ?? null\n        } else {\n          const leafNodes = [\n            ...getLeafNodes(elementNode?.previousElementSibling),\n            ...getLeafNodes(elementNode),\n          ]\n          leafNode =\n            leafNodes.findLast(leaf => isBefore(nonEditableNode, leaf)) ?? null\n        }\n\n        if (leafNode) {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          if (searchDirection === 'forward') {\n            offset = 0\n          } else {\n            offset = domNode.textContent!.length\n            domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n              offset -= el.textContent!.length\n            })\n          }\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: Android IMEs might remove the zero width space while composing,\n        // and we don't add it for line-breaks.\n        IS_ANDROID &&\n        domNode.getAttribute('data-slate-zero-width') === 'z' &&\n        domNode.textContent?.startsWith('\\uFEFF') &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      const node = parentNode.hasAttribute('data-slate-node')\n        ? parentNode\n        : parentNode.closest('[data-slate-node]')\n\n      if (node && DOMEditor.hasDOMNode(editor, node, { editable: true })) {\n        const slateNode = DOMEditor.toSlateNode(editor, node)\n        let { path, offset } = Editor.start(\n          editor,\n          DOMEditor.findPath(editor, slateNode)\n        )\n\n        if (!node.querySelector('[data-slate-leaf]')) {\n          offset = nearestOffset\n        }\n\n        return { path, offset } as T extends true ? Point | null : Point\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = DOMEditor.toSlateNode(editor, textNode!)\n    const path = DOMEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  toSlateRange: <T extends boolean>(\n    editor: DOMEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range => {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        // COMPAT: In firefox the normal seletion way does not work\n        // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n        if (IS_FIREFOX && domRange.rangeCount > 1) {\n          focusNode = domRange.focusNode // Focus node works fine\n          const firstRange = domRange.getRangeAt(0)\n          const lastRange = domRange.getRangeAt(domRange.rangeCount - 1)\n\n          // Here we are in the contenteditable mode of a table in firefox\n          if (\n            focusNode instanceof HTMLTableRowElement &&\n            firstRange.startContainer instanceof HTMLTableRowElement &&\n            lastRange.startContainer instanceof HTMLTableRowElement\n          ) {\n            // HTMLElement, becouse Element is a slate element\n            function getLastChildren(element: HTMLElement): HTMLElement {\n              if (element.childElementCount > 0) {\n                return getLastChildren(<HTMLElement>element.children[0])\n              } else {\n                return element\n              }\n            }\n\n            const firstNodeRow = <HTMLTableRowElement>firstRange.startContainer\n            const lastNodeRow = <HTMLTableRowElement>lastRange.startContainer\n\n            // This should never fail as \"The HTMLElement interface represents any HTML element.\"\n            const firstNode = getLastChildren(\n              <HTMLElement>firstNodeRow.children[firstRange.startOffset]\n            )\n            const lastNode = getLastChildren(\n              <HTMLElement>lastNodeRow.children[lastRange.startOffset]\n            )\n\n            // Zero, as we allways take the right one as the anchor point\n            focusOffset = 0\n\n            if (lastNode.childNodes.length > 0) {\n              anchorNode = lastNode.childNodes[0]\n            } else {\n              anchorNode = lastNode\n            }\n\n            if (firstNode.childNodes.length > 0) {\n              focusNode = firstNode.childNodes[0]\n            } else {\n              focusNode = firstNode\n            }\n\n            if (lastNode instanceof HTMLElement) {\n              anchorOffset = (<HTMLElement>lastNode).innerHTML.length\n            } else {\n              // Fallback option\n              anchorOffset = 0\n            }\n          } else {\n            // This is the read only mode of a firefox table\n            // Right to left\n            if (firstRange.startContainer === focusNode) {\n              anchorNode = lastRange.endContainer\n              anchorOffset = lastRange.endOffset\n              focusOffset = firstRange.startOffset\n            } else {\n              // Left to right\n              anchorNode = firstRange.startContainer\n              anchorOffset = firstRange.endOffset\n              focusOffset = lastRange.startOffset\n            }\n          }\n        } else {\n          anchorNode = domRange.anchorNode\n          anchorOffset = domRange.anchorOffset\n          focusNode = domRange.focusNode\n          focusOffset = domRange.focusOffset\n        }\n\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        // IsCollapsed might not work in firefox, but this will\n        if ((IS_CHROME && hasShadowRoot(anchorNode)) || IS_FIREFOX) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    // COMPAT: Firefox sometimes includes an extra \\n (rendered by TextString\n    // when isTrailing is true) in the focusOffset, resulting in an invalid\n    // Slate point. (2023/11/01)\n    if (\n      IS_FIREFOX &&\n      focusNode.textContent?.endsWith('\\n\\n') &&\n      focusOffset === focusNode.textContent.length\n    ) {\n      focusOffset--\n    }\n\n    const anchor = DOMEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {\n      exactMatch,\n      suppressThrow,\n    })\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focusBeforeAnchor =\n      isBefore(anchorNode, focusNode) ||\n      (anchorNode === focusNode && focusOffset < anchorOffset)\n    const focus = isCollapsed\n      ? anchor\n      : DOMEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n          searchDirection: focusBeforeAnchor ? 'forward' : 'backward',\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return range as unknown as T extends true ? Range | null : Range\n  },\n}\n", "import {\n  Editor,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Text,\n  Element,\n} from 'slate'\nimport { EDITOR_TO_PENDING_DIFFS } from './weak-maps'\n\nexport type StringDiff = {\n  start: number\n  end: number\n  text: string\n}\n\nexport type TextDiff = {\n  id: number\n  path: Path\n  diff: StringDiff\n}\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nexport function verifyDiffState(editor: Editor, textDiff: TextDiff): boolean {\n  const { path, diff } = textDiff\n  if (!Editor.hasPath(editor, path)) {\n    return false\n  }\n\n  const node = Node.get(editor, path)\n  if (!Text.isText(node)) {\n    return false\n  }\n\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return (\n      node.text.slice(diff.start, diff.start + diff.text.length) === diff.text\n    )\n  }\n\n  const nextPath = Path.next(path)\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false\n  }\n\n  const nextNode = Node.get(editor, nextPath)\n  return Text.isText(nextNode) && nextNode.text.startsWith(diff.text)\n}\n\nexport function applyStringDiff(text: string, ...diffs: StringDiff[]) {\n  return diffs.reduce(\n    (text, diff) =>\n      text.slice(0, diff.start) + diff.text + text.slice(diff.end),\n    text\n  )\n}\n\nfunction longestCommonPrefixLength(str: string, another: string) {\n  const length = Math.min(str.length, another.length)\n\n  for (let i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i\n    }\n  }\n\n  return length\n}\n\nfunction longestCommonSuffixLength(\n  str: string,\n  another: string,\n  max: number\n): number {\n  const length = Math.min(str.length, another.length, max)\n\n  for (let i = 0; i < length; i++) {\n    if (\n      str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)\n    ) {\n      return i\n    }\n  }\n\n  return length\n}\n\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nexport function normalizeStringDiff(targetText: string, diff: StringDiff) {\n  const { start, end, text } = diff\n  const removedText = targetText.slice(start, end)\n\n  const prefixLength = longestCommonPrefixLength(removedText, text)\n  const max = Math.min(\n    removedText.length - prefixLength,\n    text.length - prefixLength\n  )\n  const suffixLength = longestCommonSuffixLength(removedText, text, max)\n\n  const normalized: StringDiff = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength),\n  }\n\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null\n  }\n\n  return normalized\n}\n\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nexport function mergeStringDiffs(\n  targetText: string,\n  a: StringDiff,\n  b: StringDiff\n): StringDiff | null {\n  const start = Math.min(a.start, b.start)\n  const overlap = Math.max(\n    0,\n    Math.min(a.start + a.text.length, b.end) - b.start\n  )\n\n  const applied = applyStringDiff(targetText, a, b)\n  const sliceEnd = Math.max(\n    b.start + b.text.length,\n    a.start +\n      a.text.length +\n      (a.start + a.text.length > b.start ? b.text.length : 0) -\n      overlap\n  )\n\n  const text = applied.slice(start, sliceEnd)\n  const end = Math.max(a.end, b.end - a.text.length + (a.end - a.start))\n  return normalizeStringDiff(targetText, { start, end, text })\n}\n\n/**\n * Get the slate range the text diff spans.\n */\nexport function targetRange(textDiff: TextDiff): Range {\n  const { path, diff } = textDiff\n  return {\n    anchor: { path, offset: diff.start },\n    focus: { path, offset: diff.end },\n  }\n}\n\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nexport function normalizePoint(editor: Editor, point: Point): Point | null {\n  let { path, offset } = point\n  if (!Editor.hasPath(editor, path)) {\n    return null\n  }\n\n  let leaf = Node.get(editor, path)\n  if (!Text.isText(leaf)) {\n    return null\n  }\n\n  const parentBlock = Editor.above(editor, {\n    match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n    at: path,\n  })\n\n  if (!parentBlock) {\n    return null\n  }\n\n  while (offset > leaf.text.length) {\n    const entry = Editor.next(editor, { at: path, match: Text.isText })\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null\n    }\n\n    offset -= leaf.text.length\n    leaf = entry[0]\n    path = entry[1]\n  }\n\n  return { path, offset }\n}\n\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nexport function normalizeRange(editor: Editor, range: Range): Range | null {\n  const anchor = normalizePoint(editor, range.anchor)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = normalizePoint(editor, range.focus)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformPendingPoint(\n  editor: Editor,\n  point: Point,\n  op: Operation\n): Point | null {\n  const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n  const textDiff = pendingDiffs?.find(({ path }) =>\n    Path.equals(path, point.path)\n  )\n\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, { affinity: 'backward' })\n  }\n\n  const { diff } = textDiff\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    const anchor = { path: point.path, offset: diff.start }\n    const transformed = Point.transform(anchor, op, {\n      affinity: 'backward',\n    })\n\n    if (!transformed) {\n      return null\n    }\n\n    return {\n      path: transformed.path,\n      offset: transformed.offset + point.offset - diff.start,\n    }\n  }\n\n  // Point references location after the diff\n  const anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start,\n  }\n  const transformed = Point.transform(anchor, op, {\n    affinity: 'backward',\n  })\n  if (!transformed) {\n    return null\n  }\n\n  if (\n    op.type === 'split_node' &&\n    Path.equals(op.path, point.path) &&\n    anchor.offset < op.position &&\n    diff.start < op.position\n  ) {\n    return transformed\n  }\n\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start,\n  }\n}\n\nexport function transformPendingRange(\n  editor: Editor,\n  range: Range,\n  op: Operation\n): Range | null {\n  const anchor = transformPendingPoint(editor, range.anchor, op)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = transformPendingPoint(editor, range.focus, op)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformTextDiff(\n  textDiff: TextDiff,\n  op: Operation\n): TextDiff | null {\n  const { path, diff, id } = textDiff\n\n  switch (op.type) {\n    case 'insert_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset <= diff.start) {\n        return {\n          diff: {\n            start: op.text.length + diff.start,\n            end: op.text.length + diff.end,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end + op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'remove_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset + op.text.length <= diff.start) {\n        return {\n          diff: {\n            start: diff.start - op.text.length,\n            end: diff.end - op.text.length,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end - op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'split_node': {\n      if (!Path.equals(op.path, path) || op.position >= diff.end) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op, { affinity: 'backward' })!,\n        }\n      }\n\n      if (op.position > diff.start) {\n        return {\n          diff: {\n            start: diff.start,\n            end: Math.min(op.position, diff.end),\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start - op.position,\n          end: diff.end - op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op, { affinity: 'forward' })!,\n      }\n    }\n    case 'merge_node': {\n      if (!Path.equals(op.path, path)) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op)!,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start + op.position,\n          end: diff.end + op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op)!,\n      }\n    }\n  }\n\n  const newPath = Path.transform(path, op)\n  if (!newPath) {\n    return null\n  }\n\n  return {\n    diff,\n    path: newPath,\n    id,\n  }\n}\n", "/**\n * Utilities for single-line deletion\n */\n\nimport { Editor, Range } from 'slate'\nimport { DOMEditor } from '../plugin/dom-editor'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (editor: DOMEditor, range1: Range, range2: Range) => {\n  const rect1 = DOMEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = DOMEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: DOMEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n", "import {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Operation,\n  Path,\n  PathRef,\n  Point,\n  Range,\n  Transforms,\n} from 'slate'\nimport {\n  TextDiff,\n  transformPendingPoint,\n  transformPendingRange,\n  transformTextDiff,\n} from '../utils/diff-text'\nimport {\n  getPlainText,\n  getSlateFragmentAttribute,\n  isDOMText,\n} from '../utils/dom'\nimport { Key } from '../utils/key'\nimport { findCurrentLineRange } from '../utils/lines'\nimport {\n  IS_NODE_MAP_DIRTY,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  NODE_TO_KEY,\n} from '../utils/weak-maps'\nimport { DOMEditor } from './dom-editor'\n\n/**\n * `withDOM` adds DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withDOM = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & DOMEditor => {\n  const e = editor as T & DOMEditor\n  const { apply, onChange, deleteBackward, addMark, removeMark } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.addMark = (key, value) => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(e)?.()\n\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    addMark(key, value)\n  }\n\n  e.removeMark = key => {\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    removeMark(key)\n  }\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      const parentBlockEntry = Editor.above(e, {\n        match: n => Element.isElement(n) && Editor.isBlock(e, n),\n        at: e.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          e,\n          parentBlockPath,\n          e.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n    const pathRefMatches: [PathRef, Key][] = []\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e)\n    if (pendingDiffs?.length) {\n      const transformed = pendingDiffs\n        .map(textDiff => transformTextDiff(textDiff, op))\n        .filter(Boolean) as TextDiff[]\n\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed)\n    }\n\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e)\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(\n        e,\n        transformPendingRange(e, pendingSelection, op)\n      )\n    }\n\n    const pendingAction = EDITOR_TO_PENDING_ACTION.get(e)\n    if (pendingAction?.at) {\n      const at = Point.isPoint(pendingAction?.at)\n        ? transformPendingPoint(e, pendingAction.at, op)\n        : transformPendingRange(e, pendingAction.at, op)\n\n      EDITOR_TO_PENDING_ACTION.set(e, at ? { ...pendingAction, at } : null)\n    }\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(e)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(e)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n\n        let changedPath: Path\n        if (Path.isBefore(op.path, op.newPath)) {\n          matches.push(...getMatches(e, Path.parent(op.path)))\n          changedPath = op.newPath\n        } else {\n          matches.push(...getMatches(e, Path.parent(op.newPath)))\n          changedPath = op.path\n        }\n\n        const changedNode = Node.get(editor, Path.parent(changedPath))\n        const changedNodeKey = DOMEditor.findKey(e, changedNode)\n        const changedPathRef = Editor.pathRef(e, Path.parent(changedPath))\n        pathRefMatches.push([changedPathRef, changedNodeKey])\n\n        break\n      }\n    }\n\n    apply(op)\n\n    switch (op.type) {\n      case 'insert_node':\n      case 'remove_node':\n      case 'merge_node':\n      case 'move_node':\n      case 'split_node':\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_selection': {\n        // FIXME: Rename to something like IS_DOM_EDITOR_DESYNCED\n        // to better reflect reality, see #5792\n        IS_NODE_MAP_DIRTY.set(e, true)\n      }\n    }\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n\n    for (const [pathRef, key] of pathRefMatches) {\n      if (pathRef.current) {\n        const [node] = Editor.node(e, pathRef.current)\n        NODE_TO_KEY.set(node, key)\n      }\n\n      pathRef.unref()\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = DOMEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = DOMEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData(`application/${clipboardFormatKey}`, encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData(`application/${clipboardFormatKey}`) ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = options => {\n    const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n    if (onContextChange) {\n      onContextChange(options)\n    }\n\n    onChange(options)\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = DOMEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n", "export const TRIPLE_CLICK = 3\n", "import { isHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[<keyof typeof HOTKEYS>key]\n  const apple = APPLE_HOTKEYS[<keyof typeof APPLE_HOTKEYS>key]\n  const windows = WINDOWS_HOTKEYS[<keyof typeof WINDOWS_HOTKEYS>key]\n  const isGeneric = generic && isHotkey(generic)\n  const isApple = apple && isHotkey(apple)\n  const isWindows = windows && isHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n", "export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}", "import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}", "import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (\n  obj1: { [key: string]: unknown },\n  obj2: { [key: string]: unknown }\n) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\nconst isDecorationFlagsEqual = (range: Range, other: Range) => {\n  const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n  const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n  return (\n    range[PLACEHOLDER_SYMBOL] === other[PLACEHOLDER_SYMBOL] &&\n    shallowCompare(rangeOwnProps, otherOwnProps)\n  )\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isElementDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    if (!Range.equals(range, other) || !isDecorationFlagsEqual(range, other)) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isTextDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    // compare only offsets because paths doesn't matter for text\n    if (\n      range.anchor.offset !== other.anchor.offset ||\n      range.focus.offset !== other.focus.offset ||\n      !isDecorationFlagsEqual(range, other)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n", "var resizeObservers = [];\nexport { resizeObservers };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n", "var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n", "var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n", "export var freeze = function (obj) { return Object.freeze(obj); };\n", "import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n", "import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n", "var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n", "export var global = typeof window !== 'undefined' ? window : {};\n", "import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n", "import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n", "import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n", "import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n", "var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n", "import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n", "import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n", "import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n", "var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n", "import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n", "import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n", "export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}", "import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}", "export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import { DOMEditor, type DOMEditorInterface } from 'slate-dom'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends DOMEditor {}\n\nexport interface ReactEditorInterface extends DOMEditorInterface {}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor: ReactEditorInterface = DOMEditor\n", "import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  applyStringDiff,\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from 'slate-dom'\nimport { isDOMSelection, isTrackedMutation } from 'slate-dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n  IS_NODE_MAP_DIRTY,\n} from 'slate-dom'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\n// Type guard to check if a value is a DataTransfer\nconst isDataTransfer = (value: any): value is DataTransfer =>\n  value?.constructor.name === 'DataTransfer'\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = hasPendingDiffs()\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (IS_NODE_MAP_DIRTY.get(editor)) {\n      return\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data: DataTransfer | string | undefined =\n      (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    let canStoreDiff = true\n\n    if (type.startsWith('delete')) {\n      if (Range.isExpanded(targetRange)) {\n        const [start, end] = Range.edges(targetRange)\n        const leaf = Node.leaf(editor, start.path)\n\n        if (leaf.text.length === start.offset && end.offset === 0) {\n          const next = Editor.next(editor, {\n            at: start.path,\n            match: Text.isText,\n          })\n          if (next && Path.equals(next[1], end.path)) {\n            targetRange = { anchor: end, focus: end }\n          }\n        }\n      }\n\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      const [start, end] = Range.edges(targetRange)\n      const [leaf, path] = Editor.leaf(editor, start.path)\n\n      const diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset,\n      }\n      const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n      const relevantPendingDiffs = pendingDiffs?.find(change =>\n        Path.equals(change.path, path)\n      )\n      const diffs = relevantPendingDiffs\n        ? [relevantPendingDiffs.diff, diff]\n        : [diff]\n      const text = applyStringDiff(leaf.text, ...diffs)\n\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false\n      }\n\n      if (Range.isExpanded(targetRange)) {\n        if (\n          canStoreDiff &&\n          Path.equals(targetRange.anchor.path, targetRange.focus.path)\n        ) {\n          const point = { path: targetRange.anchor.path, offset: start.offset }\n          const range = Editor.range(editor, point, point)\n          handleUserSelect(range)\n\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset,\n          })\n        }\n\n        return scheduleAction(\n          () => Editor.deleteFragment(editor, { direction }),\n          { at: targetRange }\n        )\n      }\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (canStoreDiff && Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          canStoreDiff &&\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (isDataTransfer(data)) {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        // Pastes from the Android clipboard will generate `insertText` events.\n        // If the copied text contains any newlines, Android will append an\n        // extra newline to the end of the copied text.\n        if (type === 'insertText' && /.*\\n.*\\n$/.test(text)) {\n          text = text.slice(0, -1)\n        }\n\n        // If the text includes a newline, split it at newlines and paste each component\n        // string, with soft breaks in between each.\n        if (text.includes('\\n')) {\n          return scheduleAction(\n            () => {\n              const parts = text.split('\\n')\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line)\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor)\n                }\n              })\n            },\n            {\n              at: targetRange,\n            }\n          )\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          if (canStoreDiff) {\n            storeDiff(start.path, diff)\n            return\n          }\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n", "import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n", "import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from 'slate-dom'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n", "import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [mutationObserver, node, options])\n}\n", "import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from 'slate-dom'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from 'slate-dom'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport const useAndroidInputManager = !IS_ANDROID\n  ? () => null\n  : ({ node, ...options }: UseAndroidInputManagerOptions) => {\n      if (!IS_ANDROID) {\n        return null\n      }\n\n      const editor = useSlateStatic()\n      const isMounted = useIsMounted()\n\n      const [inputManager] = useState(() =>\n        createAndroidInputManager({\n          editor,\n          ...options,\n        })\n      )\n\n      useMutationObserver(\n        node,\n        inputManager.handleDomMutations,\n        MUTATION_OBSERVER_CONFIG\n      )\n\n      EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n      if (isMounted) {\n        inputManager.flush()\n      }\n\n      return inputManager\n    }\n", "import React, { forwardRef, memo, useRef, useState } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID, IS_IOS } from 'slate-dom'\nimport { MARK_PLACEHOLDER_SYMBOL } from 'slate-dom'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = Boolean(leaf[MARK_PLACEHOLDER_SYMBOL])\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  const ref = useRef<HTMLSpanElement>(null)\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n  const [initialText] = useState(getTextContent)\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return <MemoizedText ref={ref}>{initialText}</MemoizedText>\n}\n\nconst MemoizedText = memo(\n  forwardRef<HTMLSpanElement, { children: string }>((props, ref) => {\n    return (\n      <span data-slate-string ref={ref}>\n        {props.children}\n      </span>\n    )\n  })\n)\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes: {\n    'data-slate-zero-width': string\n    'data-slate-length': number\n    'data-slate-mark-placeholder'?: boolean\n  } = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  return (\n    <span {...attributes}>\n      {!(IS_ANDROID || IS_IOS) || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n", "import React, {\n  useRef,\n  useCallback,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport { JSX } from 'react'\nimport { Element, Text } from 'slate'\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer'\nimport String from './string'\nimport {\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n} from 'slate-dom'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { IS_WEBKIT, IS_ANDROID } from 'slate-dom'\n\n// Delay the placeholder on Android to prevent the keyboard from closing.\n// (https://github.com/ianstormtaylor/slate/pull/5368)\nconst PLACEHOLDER_DELAY = IS_ANDROID ? 300 : 0\n\nfunction disconnectPlaceholderResizeObserver(\n  placeholderResizeObserver: MutableRefObject<ResizeObserver | null>,\n  releaseObserver: boolean\n) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect()\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null\n    }\n  }\n}\n\ntype TimerId = ReturnType<typeof setTimeout> | null\n\nfunction clearTimeoutRef(timeoutRef: MutableRefObject<TimerId>) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = null\n  }\n}\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const editor = useSlateStatic()\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n  const placeholderRef = useRef<HTMLElement | null>(null)\n  const [showPlaceholder, setShowPlaceholder] = useState(false)\n  const showPlaceholderTimeoutRef = useRef<TimerId>(null)\n\n  const callbackPlaceholderRef = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      disconnectPlaceholderResizeObserver(\n        placeholderResizeObserver,\n        placeholderEl == null\n      )\n\n      if (placeholderEl == null) {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n        leaf.onPlaceholderResize?.(null)\n      } else {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n        if (!placeholderResizeObserver.current) {\n          // Create a new observer and observe the placeholder element.\n          const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill\n          placeholderResizeObserver.current = new ResizeObserver(() => {\n            leaf.onPlaceholderResize?.(placeholderEl)\n          })\n        }\n        placeholderResizeObserver.current.observe(placeholderEl)\n        placeholderRef.current = placeholderEl\n      }\n    },\n    [placeholderRef, leaf, editor]\n  )\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  const leafIsPlaceholder = Boolean(leaf[PLACEHOLDER_SYMBOL])\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder, so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true)\n          showPlaceholderTimeoutRef.current = null\n        }, PLACEHOLDER_DELAY)\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef)\n      setShowPlaceholder(false)\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef)\n  }, [leafIsPlaceholder, setShowPlaceholder])\n\n  if (leafIsPlaceholder && showPlaceholder) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined,\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n", "import React, { useCallback, useRef } from 'react'\nimport { Element, DecoratedRange, Text as SlateText } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { isTextDecorationsEqual } from 'slate-dom'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from 'slate-dom'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport Leaf from './leaf'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: DecoratedRange[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const { decorations, isLast, parent, renderPlaceholder, renderLeaf, text } =\n    props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement | null>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  const callbackRef = useCallback(\n    (span: HTMLSpanElement | null) => {\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (span) {\n        KEY_TO_ELEMENT?.set(key, span)\n        NODE_TO_ELEMENT.set(text, span)\n        ELEMENT_TO_NODE.set(span, text)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(text)\n        if (ref.current) {\n          ELEMENT_TO_NODE.delete(ref.current)\n        }\n      }\n      ref.current = span\n    },\n    [ref, editor, key, text]\n  )\n  return (\n    <span data-slate-node=\"text\" ref={callbackRef}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    isTextDecorationsEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n", "import getDirection from 'direction'\nimport React, { useCallback } from 'react'\nimport { JSX } from 'react'\nimport {\n  Editor,\n  Element as SlateElement,\n  Node,\n  Range,\n  DecoratedRange,\n} from 'slate'\nimport { ReactEditor, useReadOnly, useSlateStatic } from '..'\nimport useChildren from '../hooks/use-children'\nimport { isElementDecorationsEqual } from 'slate-dom'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n} from 'slate-dom'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\nimport Text from './text'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: DecoratedRange[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    prev.renderPlaceholder === next.renderPlaceholder &&\n    isElementDecorationsEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n", "import { createContext, useContext } from 'react'\nimport { DecoratedRange, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<\n  (entry: NodeEntry) => DecoratedRange[]\n>(() => [])\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => DecoratedRange[]) => {\n  return useContext(DecorateContext)\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n", "import React from 'react'\nimport {\n  Ancestor,\n  Descendant,\n  Editor,\n  Element,\n  Range,\n  DecoratedRange,\n} from 'slate'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { IS_NODE_MAP_DIRTY, NODE_TO_INDEX, NODE_TO_PARENT } from 'slate-dom'\nimport { useDecorate } from './use-decorate'\nimport { SelectedContext } from './use-selected'\nimport { useSlateStatic } from './use-slate-static'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: DecoratedRange[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  IS_NODE_MAP_DIRTY.set(editor as ReactEditor, false)\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n", "import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport interface SlateContextValue {\n  v: number\n  editor: ReactEditor\n}\n\nexport const SlateContext = createContext<{\n  v: number\n  editor: ReactEditor\n} | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const { editor } = context\n  return editor\n}\n\nexport const useSlateWithV = (): { editor: Editor; v: number } => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return context\n}\n", "import { useCallback, useEffect, useRef } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [editor])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n", "import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from 'slate-dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return\n        }\n\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling)\n        })\n\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node)\n        })\n      })\n\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear()\n    }\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n", "import React, {\n  Component,\n  ComponentType,\n  ContextType,\n  ReactNode,\n  RefObject,\n} from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from 'slate-dom'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  children?: ReactNode\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `composing` state of the editor.\n */\n\nexport const ComposingContext = createContext(false)\n\n/**\n * Get the current `composing` state of the editor.\n */\n\nexport const useComposing = (): boolean => {\n  return useContext(ComposingContext)\n}\n", "import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  forwardRef,\n  ForwardedRef,\n} from 'react'\nimport { JSX } from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n  DecoratedRange,\n} from 'slate'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { TRIPLE_CLICK } from 'slate-dom'\nimport {\n  DOMElement,\n  DOMRange,\n  DOMText,\n  getActiveElement,\n  getDefaultView,\n  getSelection,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from 'slate-dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_WEBKIT,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from 'slate-dom'\nimport { Hotkeys } from 'slate-dom'\nimport {\n  IS_NODE_MAP_DIRTY,\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from 'slate-dom'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { AndroidInputManager } from '../hooks/android-input-manager/android-input-manager'\nimport { ComposingContext } from '../hooks/use-composing'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => DecoratedRange[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n  disableDefaultStyles?: boolean\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = forwardRef(\n  (props: EditableProps, forwardedRef: ForwardedRef<HTMLDivElement>) => {\n    const defaultRenderPlaceholder = useCallback(\n      (props: RenderPlaceholderProps) => <DefaultPlaceholder {...props} />,\n      []\n    )\n    const {\n      autoFocus,\n      decorate = defaultDecorate,\n      onDOMBeforeInput: propsOnDOMBeforeInput,\n      placeholder,\n      readOnly = false,\n      renderElement,\n      renderLeaf,\n      renderPlaceholder = defaultRenderPlaceholder,\n      scrollSelectionIntoView = defaultScrollSelectionIntoView,\n      style: userStyle = {},\n      as: Component = 'div',\n      disableDefaultStyles = false,\n      ...attributes\n    } = props\n    const editor = useSlate()\n    // Rerender editor when composition status changed\n    const [isComposing, setIsComposing] = useState(false)\n    const ref = useRef<HTMLDivElement | null>(null)\n    const deferredOperations = useRef<DeferredOperation[]>([])\n    const [placeholderHeight, setPlaceholderHeight] = useState<\n      number | undefined\n    >()\n    const processing = useRef(false)\n\n    const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n    const [, forceRender] = useReducer(s => s + 1, 0)\n    EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n    // Update internal state on each render.\n    IS_READ_ONLY.set(editor, readOnly)\n\n    // Keep track of some state for the event handler logic.\n    const state = useMemo(\n      () => ({\n        isDraggingInternally: false,\n        isUpdatingSelection: false,\n        latestElement: null as DOMElement | null,\n        hasMarkPlaceholder: false,\n      }),\n      []\n    )\n\n    // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n    // needs to be manually focused.\n    useEffect(() => {\n      if (ref.current && autoFocus) {\n        ref.current.focus()\n      }\n    }, [autoFocus])\n\n    /**\n     * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n     *\n     * It is defined as a reference to simplify hook dependencies and clarify that\n     * it needs to be initialized.\n     */\n    const androidInputManagerRef = useRef<\n      AndroidInputManager | null | undefined\n    >()\n\n    // Listen on the native `selectionchange` event to be able to update any time\n    // the selection changes. This is required because React's `onSelect` is leaky\n    // and non-standard so it doesn't fire until after a selection has been\n    // released. This causes issues in situations where another change happens\n    // while a selection is being dragged.\n    const onDOMSelectionChange = useMemo(\n      () =>\n        throttle(() => {\n          if (IS_NODE_MAP_DIRTY.get(editor)) {\n            onDOMSelectionChange()\n            return\n          }\n\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const root = el.getRootNode()\n\n          if (!processing.current && IS_WEBKIT && root instanceof ShadowRoot) {\n            processing.current = true\n\n            const active = getActiveElement()\n\n            if (active) {\n              document.execCommand('indent')\n            } else {\n              Transforms.deselect(editor)\n            }\n\n            processing.current = false\n            return\n          }\n\n          const androidInputManager = androidInputManagerRef.current\n          if (\n            (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n            (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n            !state.isDraggingInternally\n          ) {\n            const root = ReactEditor.findDocumentOrShadowRoot(editor)\n            const { activeElement } = root\n            const el = ReactEditor.toDOMNode(editor, editor)\n            const domSelection = getSelection(root)\n\n            if (activeElement === el) {\n              state.latestElement = activeElement\n              IS_FOCUSED.set(editor, true)\n            } else {\n              IS_FOCUSED.delete(editor)\n            }\n\n            if (!domSelection) {\n              return Transforms.deselect(editor)\n            }\n\n            const { anchorNode, focusNode } = domSelection\n\n            const anchorNodeSelectable =\n              ReactEditor.hasEditableTarget(editor, anchorNode) ||\n              ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n            const focusNodeInEditor = ReactEditor.hasTarget(editor, focusNode)\n\n            if (anchorNodeSelectable && focusNodeInEditor) {\n              const range = ReactEditor.toSlateRange(editor, domSelection, {\n                exactMatch: false,\n                suppressThrow: true,\n              })\n\n              if (range) {\n                if (\n                  !ReactEditor.isComposing(editor) &&\n                  !androidInputManager?.hasPendingChanges() &&\n                  !androidInputManager?.isFlushing()\n                ) {\n                  Transforms.select(editor, range)\n                } else {\n                  androidInputManager?.handleUserSelect(range)\n                }\n              }\n            }\n\n            // Deselect the editor if the dom selection is not selectable in readonly mode\n            if (readOnly && (!anchorNodeSelectable || !focusNodeInEditor)) {\n              Transforms.deselect(editor)\n            }\n          }\n        }, 100),\n      [editor, readOnly, state]\n    )\n\n    const scheduleOnDOMSelectionChange = useMemo(\n      () => debounce(onDOMSelectionChange, 0),\n      [onDOMSelectionChange]\n    )\n\n    androidInputManagerRef.current = useAndroidInputManager({\n      node: ref,\n      onDOMSelectionChange,\n      scheduleOnDOMSelectionChange,\n    })\n\n    useIsomorphicLayoutEffect(() => {\n      // Update element-related weak maps with the DOM element ref.\n      let window\n      if (ref.current && (window = getDefaultView(ref.current))) {\n        EDITOR_TO_WINDOW.set(editor, window)\n        EDITOR_TO_ELEMENT.set(editor, ref.current)\n        NODE_TO_ELEMENT.set(editor, ref.current)\n        ELEMENT_TO_NODE.set(ref.current, editor)\n      } else {\n        NODE_TO_ELEMENT.delete(editor)\n      }\n\n      // Make sure the DOM selection state is in sync.\n      const { selection } = editor\n      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n      const domSelection = getSelection(root)\n\n      if (\n        !domSelection ||\n        !ReactEditor.isFocused(editor) ||\n        androidInputManagerRef.current?.hasPendingAction()\n      ) {\n        return\n      }\n\n      const setDomSelection = (forceChange?: boolean) => {\n        const hasDomSelection = domSelection.type !== 'None'\n\n        // If the DOM selection is properly unset, we're done.\n        if (!selection && !hasDomSelection) {\n          return\n        }\n\n        // Get anchorNode and focusNode\n        const focusNode = domSelection.focusNode\n        let anchorNode\n\n        // COMPAT: In firefox the normal selection way does not work\n        // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n        if (IS_FIREFOX && domSelection.rangeCount > 1) {\n          const firstRange = domSelection.getRangeAt(0)\n          const lastRange = domSelection.getRangeAt(domSelection.rangeCount - 1)\n\n          // Right to left\n          if (firstRange.startContainer === focusNode) {\n            anchorNode = lastRange.endContainer\n          } else {\n            // Left to right\n            anchorNode = firstRange.startContainer\n          }\n        } else {\n          anchorNode = domSelection.anchorNode\n        }\n\n        // verify that the dom selection is in the editor\n        const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n        let hasDomSelectionInEditor = false\n        if (\n          editorElement.contains(anchorNode) &&\n          editorElement.contains(focusNode)\n        ) {\n          hasDomSelectionInEditor = true\n        }\n\n        // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n        if (\n          hasDomSelection &&\n          hasDomSelectionInEditor &&\n          selection &&\n          !forceChange\n        ) {\n          const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: true,\n\n            // domSelection is not necessarily a valid Slate range\n            // (e.g. when clicking on contentEditable:false element)\n            suppressThrow: true,\n          })\n\n          if (slateRange && Range.equals(slateRange, selection)) {\n            if (!state.hasMarkPlaceholder) {\n              return\n            }\n\n            // Ensure selection is inside the mark placeholder\n            if (\n              anchorNode?.parentElement?.hasAttribute(\n                'data-slate-mark-placeholder'\n              )\n            ) {\n              return\n            }\n          }\n        }\n\n        // when <Editable/> is being controlled through external value\n        // then its children might just change - DOM responds to it on its own\n        // but Slate's value is not being updated through any operation\n        // and thus it doesn't transform selection on its own\n        if (selection && !ReactEditor.hasRange(editor, selection)) {\n          editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: true,\n          })\n          return\n        }\n\n        // Otherwise the DOM selection is out of sync, so update it.\n        state.isUpdatingSelection = true\n\n        let newDomRange: DOMRange | null = null\n\n        try {\n          newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n        } catch (e) {\n          // Ignore, dom and state might be out of sync\n        }\n\n        if (newDomRange) {\n          if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n            domSelection.collapseToEnd()\n          } else if (Range.isBackward(selection!)) {\n            domSelection.setBaseAndExtent(\n              newDomRange.endContainer,\n              newDomRange.endOffset,\n              newDomRange.startContainer,\n              newDomRange.startOffset\n            )\n          } else {\n            domSelection.setBaseAndExtent(\n              newDomRange.startContainer,\n              newDomRange.startOffset,\n              newDomRange.endContainer,\n              newDomRange.endOffset\n            )\n          }\n          scrollSelectionIntoView(editor, newDomRange)\n        } else {\n          domSelection.removeAllRanges()\n        }\n\n        return newDomRange\n      }\n\n      // In firefox if there is more then 1 range and we call setDomSelection we remove the ability to select more cells in a table\n      if (domSelection.rangeCount <= 1) {\n        setDomSelection()\n      }\n\n      const ensureSelection =\n        androidInputManagerRef.current?.isFlushing() === 'action'\n\n      if (!IS_ANDROID || !ensureSelection) {\n        setTimeout(() => {\n          state.isUpdatingSelection = false\n        })\n        return\n      }\n\n      let timeoutId: ReturnType<typeof setTimeout> | null = null\n      const animationFrameId = requestAnimationFrame(() => {\n        if (ensureSelection) {\n          const ensureDomSelection = (forceChange?: boolean) => {\n            try {\n              const el = ReactEditor.toDOMNode(editor, editor)\n              el.focus()\n\n              setDomSelection(forceChange)\n            } catch (e) {\n              // Ignore, dom and state might be out of sync\n            }\n          }\n\n          // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n          // This essentially would make setting the slate selection during an update meaningless, so we force it\n          // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n          // visible flicker.\n          ensureDomSelection()\n\n          timeoutId = setTimeout(() => {\n            // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n            // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n            // the animation frame to ensure it displays the correct state.\n            ensureDomSelection(true)\n            state.isUpdatingSelection = false\n          })\n        }\n      })\n\n      return () => {\n        cancelAnimationFrame(animationFrameId)\n        if (timeoutId) {\n          clearTimeout(timeoutId)\n        }\n      }\n    })\n\n    // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n    // is required because React's `beforeinput` is fake and never really attaches\n    // to the real event sadly. (2019/11/01)\n    // https://github.com/facebook/react/issues/11211\n    const onDOMBeforeInput = useCallback(\n      (event: InputEvent) => {\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const root = el.getRootNode()\n\n        if (processing?.current && IS_WEBKIT && root instanceof ShadowRoot) {\n          const ranges = event.getTargetRanges()\n          const range = ranges[0]\n\n          const newRange = new window.Range()\n\n          newRange.setStart(range.startContainer, range.startOffset)\n          newRange.setEnd(range.endContainer, range.endOffset)\n\n          // Translate the DOM Range into a Slate Range\n          const slateRange = ReactEditor.toSlateRange(editor, newRange, {\n            exactMatch: false,\n            suppressThrow: false,\n          })\n\n          Transforms.select(editor, slateRange)\n\n          event.preventDefault()\n          event.stopImmediatePropagation()\n          return\n        }\n        onUserInput()\n\n        if (\n          !readOnly &&\n          ReactEditor.hasEditableTarget(editor, event.target) &&\n          !isDOMEventHandled(event, propsOnDOMBeforeInput)\n        ) {\n          // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n          if (androidInputManagerRef.current) {\n            return androidInputManagerRef.current.handleDOMBeforeInput(event)\n          }\n\n          // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n          // triggering a `beforeinput` expecting the change to be applied to the immediately before\n          // set selection.\n          scheduleOnDOMSelectionChange.flush()\n          onDOMSelectionChange.flush()\n\n          const { selection } = editor\n          const { inputType: type } = event\n          const data = (event as any).dataTransfer || event.data || undefined\n\n          const isCompositionChange =\n            type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n          // COMPAT: use composition change events as a hint to where we should insert\n          // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n          if (isCompositionChange && ReactEditor.isComposing(editor)) {\n            return\n          }\n\n          let native = false\n          if (\n            type === 'insertText' &&\n            selection &&\n            Range.isCollapsed(selection) &&\n            // Only use native character insertion for single characters a-z or space for now.\n            // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n            // causes duplicate inserts.\n            event.data &&\n            event.data.length === 1 &&\n            /[a-z ]/i.test(event.data) &&\n            // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n            // When there is an inline element, e.g. a link, and you select\n            // right after it (the start of the next node).\n            selection.anchor.offset !== 0\n          ) {\n            native = true\n\n            // Skip native if there are marks, as\n            // `insertText` will insert a node, not just text.\n            if (editor.marks) {\n              native = false\n            }\n\n            // If the NODE_MAP is dirty, we can't trust the selection anchor (eg ReactEditor.toDOMPoint)\n            if (!IS_NODE_MAP_DIRTY.get(editor)) {\n              // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n              // Therefore we don't allow native events to insert text at the end of anchor nodes.\n              const { anchor } = selection\n\n              const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n              const anchorNode = node.parentElement?.closest('a')\n\n              const window = ReactEditor.getWindow(editor)\n\n              if (\n                native &&\n                anchorNode &&\n                ReactEditor.hasDOMNode(editor, anchorNode)\n              ) {\n                // Find the last text node inside the anchor.\n                const lastText = window?.document\n                  .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n                  .lastChild() as DOMText | null\n\n                if (\n                  lastText === node &&\n                  lastText.textContent?.length === offset\n                ) {\n                  native = false\n                }\n              }\n\n              // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n              // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n              if (\n                native &&\n                node.parentElement &&\n                window?.getComputedStyle(node.parentElement)?.whiteSpace ===\n                  'pre'\n              ) {\n                const block = Editor.above(editor, {\n                  at: anchor.path,\n                  match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n                })\n\n                if (block && Node.string(block[0]).includes('\\t')) {\n                  native = false\n                }\n              }\n            }\n          }\n          // COMPAT: For the deleting forward/backward input types we don't want\n          // to change the selection because it is the range that will be deleted,\n          // and those commands determine that for themselves.\n          // If the NODE_MAP is dirty, we can't trust the selection anchor (eg ReactEditor.toDOMPoint via ReactEditor.toSlateRange)\n          if (\n            (!type.startsWith('delete') || type.startsWith('deleteBy')) &&\n            !IS_NODE_MAP_DIRTY.get(editor)\n          ) {\n            const [targetRange] = (event as any).getTargetRanges()\n\n            if (targetRange) {\n              const range = ReactEditor.toSlateRange(editor, targetRange, {\n                exactMatch: false,\n                suppressThrow: false,\n              })\n\n              if (!selection || !Range.equals(selection, range)) {\n                native = false\n\n                const selectionRef =\n                  !isCompositionChange &&\n                  editor.selection &&\n                  Editor.rangeRef(editor, editor.selection)\n\n                Transforms.select(editor, range)\n\n                if (selectionRef) {\n                  EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n                }\n              }\n            }\n          }\n\n          // Composition change types occur while a user is composing text and can't be\n          // cancelled. Let them through and wait for the composition to end.\n          if (isCompositionChange) {\n            return\n          }\n\n          if (!native) {\n            event.preventDefault()\n          }\n\n          // COMPAT: If the selection is expanded, even if the command seems like\n          // a delete forward/backward command it should delete the selection.\n          if (\n            selection &&\n            Range.isExpanded(selection) &&\n            type.startsWith('delete')\n          ) {\n            const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n            Editor.deleteFragment(editor, { direction })\n            return\n          }\n\n          switch (type) {\n            case 'deleteByComposition':\n            case 'deleteByCut':\n            case 'deleteByDrag': {\n              Editor.deleteFragment(editor)\n              break\n            }\n\n            case 'deleteContent':\n            case 'deleteContentForward': {\n              Editor.deleteForward(editor)\n              break\n            }\n\n            case 'deleteContentBackward': {\n              Editor.deleteBackward(editor)\n              break\n            }\n\n            case 'deleteEntireSoftLine': {\n              Editor.deleteBackward(editor, { unit: 'line' })\n              Editor.deleteForward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteHardLineBackward': {\n              Editor.deleteBackward(editor, { unit: 'block' })\n              break\n            }\n\n            case 'deleteSoftLineBackward': {\n              Editor.deleteBackward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteHardLineForward': {\n              Editor.deleteForward(editor, { unit: 'block' })\n              break\n            }\n\n            case 'deleteSoftLineForward': {\n              Editor.deleteForward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteWordBackward': {\n              Editor.deleteBackward(editor, { unit: 'word' })\n              break\n            }\n\n            case 'deleteWordForward': {\n              Editor.deleteForward(editor, { unit: 'word' })\n              break\n            }\n\n            case 'insertLineBreak':\n              Editor.insertSoftBreak(editor)\n              break\n\n            case 'insertParagraph': {\n              Editor.insertBreak(editor)\n              break\n            }\n\n            case 'insertFromComposition':\n            case 'insertFromDrop':\n            case 'insertFromPaste':\n            case 'insertFromYank':\n            case 'insertReplacementText':\n            case 'insertText': {\n              if (type === 'insertFromComposition') {\n                // COMPAT: in Safari, `compositionend` is dispatched after the\n                // `beforeinput` for \"insertFromComposition\". But if we wait for it\n                // then we will abort because we're still composing and the selection\n                // won't be updated properly.\n                // https://www.w3.org/TR/input-events-2/\n                if (ReactEditor.isComposing(editor)) {\n                  setIsComposing(false)\n                  IS_COMPOSING.set(editor, false)\n                }\n              }\n\n              // use a weak comparison instead of 'instanceof' to allow\n              // programmatic access of paste events coming from external windows\n              // like cypress where cy.window does not work realibly\n              if (data?.constructor.name === 'DataTransfer') {\n                ReactEditor.insertData(editor, data)\n              } else if (typeof data === 'string') {\n                // Only insertText operations use the native functionality, for now.\n                // Potentially expand to single character deletes, as well.\n                if (native) {\n                  deferredOperations.current.push(() =>\n                    Editor.insertText(editor, data)\n                  )\n                } else {\n                  Editor.insertText(editor, data)\n                }\n              }\n\n              break\n            }\n          }\n\n          // Restore the actual user section if nothing manually set it.\n          const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n          EDITOR_TO_USER_SELECTION.delete(editor)\n\n          if (\n            toRestore &&\n            (!editor.selection || !Range.equals(editor.selection, toRestore))\n          ) {\n            Transforms.select(editor, toRestore)\n          }\n        }\n      },\n      [\n        editor,\n        onDOMSelectionChange,\n        onUserInput,\n        propsOnDOMBeforeInput,\n        readOnly,\n        scheduleOnDOMSelectionChange,\n      ]\n    )\n\n    const callbackRef = useCallback(\n      (node: HTMLDivElement | null) => {\n        if (node == null) {\n          onDOMSelectionChange.cancel()\n          scheduleOnDOMSelectionChange.cancel()\n\n          EDITOR_TO_ELEMENT.delete(editor)\n          NODE_TO_ELEMENT.delete(editor)\n\n          if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n            // @ts-ignore The `beforeinput` event isn't recognized.\n            ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n          }\n        } else {\n          // Attach a native DOM event handler for `beforeinput` events, because React's\n          // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n          // real `beforeinput` events sadly... (2019/11/04)\n          // https://github.com/facebook/react/issues/11211\n          if (HAS_BEFORE_INPUT_SUPPORT) {\n            // @ts-ignore The `beforeinput` event isn't recognized.\n            node.addEventListener('beforeinput', onDOMBeforeInput)\n          }\n        }\n\n        ref.current = node\n        if (typeof forwardedRef === 'function') {\n          forwardedRef(node)\n        } else if (forwardedRef) {\n          forwardedRef.current = node\n        }\n      },\n      [\n        onDOMSelectionChange,\n        scheduleOnDOMSelectionChange,\n        editor,\n        onDOMBeforeInput,\n        forwardedRef,\n      ]\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      const window = ReactEditor.getWindow(editor)\n\n      // COMPAT: In Chrome, `selectionchange` events can fire when <input> and\n      // <textarea> elements are appended to the DOM, causing\n      // `editor.selection` to be overwritten in some circumstances.\n      // (2025/01/16) https://issues.chromium.org/issues/389368412\n      const onSelectionChange = ({ target }: Event) => {\n        const targetElement = target instanceof HTMLElement ? target : null\n        const targetTagName = targetElement?.tagName\n        if (targetTagName === 'INPUT' || targetTagName === 'TEXTAREA') {\n          return\n        }\n        scheduleOnDOMSelectionChange()\n      }\n\n      // Attach a native DOM event handler for `selectionchange`, because React's\n      // built-in `onSelect` handler doesn't fire for all selection changes. It's\n      // a leaky polyfill that only fires on keypresses or clicks. Instead, we\n      // want to fire for any change to the selection inside the editor.\n      // (2019/11/04) https://github.com/facebook/react/issues/5785\n      window.document.addEventListener('selectionchange', onSelectionChange)\n\n      // Listen for dragend and drop globally. In Firefox, if a drop handler\n      // initiates an operation that causes the originally dragged element to\n      // unmount, that element will not emit a dragend event. (2024/06/21)\n      const stoppedDragging = () => {\n        state.isDraggingInternally = false\n      }\n      window.document.addEventListener('dragend', stoppedDragging)\n      window.document.addEventListener('drop', stoppedDragging)\n\n      return () => {\n        window.document.removeEventListener(\n          'selectionchange',\n          onSelectionChange\n        )\n        window.document.removeEventListener('dragend', stoppedDragging)\n        window.document.removeEventListener('drop', stoppedDragging)\n      }\n    }, [scheduleOnDOMSelectionChange, state])\n\n    const decorations = decorate([editor, []])\n\n    const showPlaceholder =\n      placeholder &&\n      editor.children.length === 1 &&\n      Array.from(Node.texts(editor)).length === 1 &&\n      Node.string(editor) === '' &&\n      !isComposing\n\n    const placeHolderResizeHandler = useCallback(\n      (placeholderEl: HTMLElement | null) => {\n        if (placeholderEl && showPlaceholder) {\n          setPlaceholderHeight(placeholderEl.getBoundingClientRect()?.height)\n        } else {\n          setPlaceholderHeight(undefined)\n        }\n      },\n      [showPlaceholder]\n    )\n\n    if (showPlaceholder) {\n      const start = Editor.start(editor, [])\n      decorations.push({\n        [PLACEHOLDER_SYMBOL]: true,\n        placeholder,\n        onPlaceholderResize: placeHolderResizeHandler,\n        anchor: start,\n        focus: start,\n      })\n    }\n\n    const { marks } = editor\n    state.hasMarkPlaceholder = false\n\n    if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n      const { anchor } = editor.selection\n      const leaf = Node.leaf(editor, anchor.path)\n      const { text, ...rest } = leaf\n\n      // While marks isn't a 'complete' text, we can still use loose Text.equals\n      // here which only compares marks anyway.\n      if (!Text.equals(leaf, marks as Text, { loose: true })) {\n        state.hasMarkPlaceholder = true\n\n        const unset = Object.fromEntries(\n          Object.keys(rest).map(mark => [mark, null])\n        )\n\n        decorations.push({\n          [MARK_PLACEHOLDER_SYMBOL]: true,\n          ...unset,\n          ...marks,\n\n          anchor,\n          focus: anchor,\n        })\n      }\n    }\n\n    // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n    // before we receive the composition end event.\n    useEffect(() => {\n      setTimeout(() => {\n        const { selection } = editor\n        if (selection) {\n          const { anchor } = selection\n          const text = Node.leaf(editor, anchor.path)\n\n          // While marks isn't a 'complete' text, we can still use loose Text.equals\n          // here which only compares marks anyway.\n          if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n            EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n            return\n          }\n        }\n\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n      })\n    })\n\n    return (\n      <ReadOnlyContext.Provider value={readOnly}>\n        <ComposingContext.Provider value={isComposing}>\n          <DecorateContext.Provider value={decorate}>\n            <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n              <Component\n                role={readOnly ? undefined : 'textbox'}\n                aria-multiline={readOnly ? undefined : true}\n                {...attributes}\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n                // have to use hacks to make these replacement-based features work.\n                // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n                // mismatch warning app moves to browser. Pass-through consumer props when\n                // not CAN_USE_DOM (SSR) and default to falsy value\n                spellCheck={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.spellCheck\n                    : false\n                }\n                autoCorrect={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.autoCorrect\n                    : 'false'\n                }\n                autoCapitalize={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.autoCapitalize\n                    : 'false'\n                }\n                data-slate-editor\n                data-slate-node=\"value\"\n                // explicitly set this\n                contentEditable={!readOnly}\n                // in some cases, a decoration needs access to the range / selection to decorate a text node,\n                // then you will select the whole text node when you select part the of text\n                // this magic zIndex=\"-1\" will fix it\n                zindex={-1}\n                suppressContentEditableWarning\n                ref={callbackRef}\n                style={{\n                  ...(disableDefaultStyles\n                    ? {}\n                    : {\n                        // Allow positioning relative to the editable element.\n                        position: 'relative',\n                        // Preserve adjacent whitespace and new lines.\n                        whiteSpace: 'pre-wrap',\n                        // Allow words to break if they are too long.\n                        wordWrap: 'break-word',\n                        // Make the minimum height that of the placeholder.\n                        ...(placeholderHeight\n                          ? { minHeight: placeholderHeight }\n                          : {}),\n                      }),\n                  // Allow for passed-in styles to override anything.\n                  ...userStyle,\n                }}\n                onBeforeInput={useCallback(\n                  (event: React.FormEvent<HTMLDivElement>) => {\n                    // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                    // fall back to React's leaky polyfill instead just for it. It\n                    // only works for the `insertText` input type.\n                    if (\n                      !HAS_BEFORE_INPUT_SUPPORT &&\n                      !readOnly &&\n                      !isEventHandled(event, attributes.onBeforeInput) &&\n                      ReactEditor.hasSelectableTarget(editor, event.target)\n                    ) {\n                      event.preventDefault()\n                      if (!ReactEditor.isComposing(editor)) {\n                        const text = (event as any).data as string\n                        Editor.insertText(editor, text)\n                      }\n                    }\n                  },\n                  [attributes.onBeforeInput, editor, readOnly]\n                )}\n                onInput={useCallback(\n                  (event: React.FormEvent<HTMLDivElement>) => {\n                    if (isEventHandled(event, attributes.onInput)) {\n                      return\n                    }\n\n                    if (androidInputManagerRef.current) {\n                      androidInputManagerRef.current.handleInput()\n                      return\n                    }\n\n                    // Flush native operations, as native events will have propogated\n                    // and we can correctly compare DOM text values in components\n                    // to stop rendering, so that browser functions like autocorrect\n                    // and spellcheck work as expected.\n                    for (const op of deferredOperations.current) {\n                      op()\n                    }\n                    deferredOperations.current = []\n\n                    // COMPAT: Since `beforeinput` doesn't fully `preventDefault`,\n                    // there's a chance that content might be placed in the browser's undo stack.\n                    // This means undo can be triggered even when the div is not focused,\n                    // and it only triggers the input event for the node. (2024/10/09)\n                    if (!ReactEditor.isFocused(editor)) {\n                      const native = event.nativeEvent as InputEvent\n                      const maybeHistoryEditor: any = editor\n                      if (\n                        native.inputType === 'historyUndo' &&\n                        typeof maybeHistoryEditor.undo === 'function'\n                      ) {\n                        maybeHistoryEditor.undo()\n                        return\n                      }\n                      if (\n                        native.inputType === 'historyRedo' &&\n                        typeof maybeHistoryEditor.redo === 'function'\n                      ) {\n                        maybeHistoryEditor.redo()\n                        return\n                      }\n                    }\n                  },\n                  [attributes.onInput, editor]\n                )}\n                onBlur={useCallback(\n                  (event: React.FocusEvent<HTMLDivElement>) => {\n                    if (\n                      readOnly ||\n                      state.isUpdatingSelection ||\n                      !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                      isEventHandled(event, attributes.onBlur)\n                    ) {\n                      return\n                    }\n\n                    // COMPAT: If the current `activeElement` is still the previous\n                    // one, this is due to the window being blurred when the tab\n                    // itself becomes unfocused, so we want to abort early to allow to\n                    // editor to stay focused when the tab becomes focused again.\n                    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                    if (state.latestElement === root.activeElement) {\n                      return\n                    }\n\n                    const { relatedTarget } = event\n                    const el = ReactEditor.toDOMNode(editor, editor)\n\n                    // COMPAT: The event should be ignored if the focus is returning\n                    // to the editor from an embedded editable element (eg. an <input>\n                    // element inside a void node).\n                    if (relatedTarget === el) {\n                      return\n                    }\n\n                    // COMPAT: The event should be ignored if the focus is moving from\n                    // the editor to inside a void node's spacer element.\n                    if (\n                      isDOMElement(relatedTarget) &&\n                      relatedTarget.hasAttribute('data-slate-spacer')\n                    ) {\n                      return\n                    }\n\n                    // COMPAT: The event should be ignored if the focus is moving to a\n                    // non- editable section of an element that isn't a void node (eg.\n                    // a list item of the check list example).\n                    if (\n                      relatedTarget != null &&\n                      isDOMNode(relatedTarget) &&\n                      ReactEditor.hasDOMNode(editor, relatedTarget)\n                    ) {\n                      const node = ReactEditor.toSlateNode(\n                        editor,\n                        relatedTarget\n                      )\n\n                      if (Element.isElement(node) && !editor.isVoid(node)) {\n                        return\n                      }\n                    }\n\n                    // COMPAT: Safari doesn't always remove the selection even if the content-\n                    // editable element no longer has focus. Refer to:\n                    // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                    if (IS_WEBKIT) {\n                      const domSelection = getSelection(root)\n                      domSelection?.removeAllRanges()\n                    }\n\n                    IS_FOCUSED.delete(editor)\n                  },\n                  [\n                    readOnly,\n                    state.isUpdatingSelection,\n                    state.latestElement,\n                    editor,\n                    attributes.onBlur,\n                  ]\n                )}\n                onClick={useCallback(\n                  (event: React.MouseEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onClick) &&\n                      isDOMNode(event.target)\n                    ) {\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n                      const path = ReactEditor.findPath(editor, node)\n\n                      // At this time, the Slate document may be arbitrarily different,\n                      // because onClick handlers can change the document before we get here.\n                      // Therefore we must check that this path actually exists,\n                      // and that it still refers to the same node.\n                      if (\n                        !Editor.hasPath(editor, path) ||\n                        Node.get(editor, path) !== node\n                      ) {\n                        return\n                      }\n\n                      if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                        let blockPath = path\n                        if (\n                          !(\n                            Element.isElement(node) &&\n                            Editor.isBlock(editor, node)\n                          )\n                        ) {\n                          const block = Editor.above(editor, {\n                            match: n =>\n                              Element.isElement(n) && Editor.isBlock(editor, n),\n                            at: path,\n                          })\n\n                          blockPath = block?.[1] ?? path.slice(0, 1)\n                        }\n\n                        const range = Editor.range(editor, blockPath)\n                        Transforms.select(editor, range)\n                        return\n                      }\n\n                      if (readOnly) {\n                        return\n                      }\n\n                      const start = Editor.start(editor, path)\n                      const end = Editor.end(editor, path)\n                      const startVoid = Editor.void(editor, { at: start })\n                      const endVoid = Editor.void(editor, { at: end })\n\n                      if (\n                        startVoid &&\n                        endVoid &&\n                        Path.equals(startVoid[1], endVoid[1])\n                      ) {\n                        const range = Editor.range(editor, start)\n                        Transforms.select(editor, range)\n                      }\n                    }\n                  },\n                  [editor, attributes.onClick, readOnly]\n                )}\n                onCompositionEnd={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                      if (ReactEditor.isComposing(editor)) {\n                        Promise.resolve().then(() => {\n                          setIsComposing(false)\n                          IS_COMPOSING.set(editor, false)\n                        })\n                      }\n\n                      androidInputManagerRef.current?.handleCompositionEnd(\n                        event\n                      )\n\n                      if (\n                        isEventHandled(event, attributes.onCompositionEnd) ||\n                        IS_ANDROID\n                      ) {\n                        return\n                      }\n\n                      // COMPAT: In Chrome, `beforeinput` events for compositions\n                      // aren't correct and never fire the \"insertFromComposition\"\n                      // type that we need. So instead, insert whenever a composition\n                      // ends since it will already have been committed to the DOM.\n                      if (\n                        !IS_WEBKIT &&\n                        !IS_FIREFOX_LEGACY &&\n                        !IS_IOS &&\n                        !IS_WECHATBROWSER &&\n                        !IS_UC_MOBILE &&\n                        event.data\n                      ) {\n                        const placeholderMarks =\n                          EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n                        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                        // Ensure we insert text with the marks the user was actually seeing\n                        if (placeholderMarks !== undefined) {\n                          EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                          editor.marks = placeholderMarks\n                        }\n\n                        Editor.insertText(editor, event.data)\n\n                        const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                        EDITOR_TO_USER_MARKS.delete(editor)\n                        if (userMarks !== undefined) {\n                          editor.marks = userMarks\n                        }\n                      }\n                    }\n                  },\n                  [attributes.onCompositionEnd, editor]\n                )}\n                onCompositionUpdate={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCompositionUpdate)\n                    ) {\n                      if (!ReactEditor.isComposing(editor)) {\n                        setIsComposing(true)\n                        IS_COMPOSING.set(editor, true)\n                      }\n                    }\n                  },\n                  [attributes.onCompositionUpdate, editor]\n                )}\n                onCompositionStart={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                      androidInputManagerRef.current?.handleCompositionStart(\n                        event\n                      )\n\n                      if (\n                        isEventHandled(event, attributes.onCompositionStart) ||\n                        IS_ANDROID\n                      ) {\n                        return\n                      }\n\n                      setIsComposing(true)\n\n                      const { selection } = editor\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor)\n                        return\n                      }\n                    }\n                  },\n                  [attributes.onCompositionStart, editor]\n                )}\n                onCopy={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCopy) &&\n                      !isDOMEventTargetInput(event)\n                    ) {\n                      event.preventDefault()\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.clipboardData,\n                        'copy'\n                      )\n                    }\n                  },\n                  [attributes.onCopy, editor]\n                )}\n                onCut={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCut) &&\n                      !isDOMEventTargetInput(event)\n                    ) {\n                      event.preventDefault()\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.clipboardData,\n                        'cut'\n                      )\n                      const { selection } = editor\n\n                      if (selection) {\n                        if (Range.isExpanded(selection)) {\n                          Editor.deleteFragment(editor)\n                        } else {\n                          const node = Node.parent(\n                            editor,\n                            selection.anchor.path\n                          )\n                          if (Editor.isVoid(editor, node)) {\n                            Transforms.delete(editor)\n                          }\n                        }\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onCut]\n                )}\n                onDragOver={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDragOver)\n                    ) {\n                      // Only when the target is void, call `preventDefault` to signal\n                      // that drops are allowed. Editable content is droppable by\n                      // default, and calling `preventDefault` hides the cursor.\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n\n                      if (\n                        Element.isElement(node) &&\n                        Editor.isVoid(editor, node)\n                      ) {\n                        event.preventDefault()\n                      }\n                    }\n                  },\n                  [attributes.onDragOver, editor]\n                )}\n                onDragStart={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDragStart)\n                    ) {\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n                      const path = ReactEditor.findPath(editor, node)\n                      const voidMatch =\n                        (Element.isElement(node) &&\n                          Editor.isVoid(editor, node)) ||\n                        Editor.void(editor, { at: path, voids: true })\n\n                      // If starting a drag on a void node, make sure it is selected\n                      // so that it shows up in the selection's fragment.\n                      if (voidMatch) {\n                        const range = Editor.range(editor, path)\n                        Transforms.select(editor, range)\n                      }\n\n                      state.isDraggingInternally = true\n\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.dataTransfer,\n                        'drag'\n                      )\n                    }\n                  },\n                  [readOnly, editor, attributes.onDragStart, state]\n                )}\n                onDrop={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDrop)\n                    ) {\n                      event.preventDefault()\n\n                      // Keep a reference to the dragged range before updating selection\n                      const draggedRange = editor.selection\n\n                      // Find the range where the drop happened\n                      const range = ReactEditor.findEventRange(editor, event)\n                      const data = event.dataTransfer\n\n                      Transforms.select(editor, range)\n\n                      if (state.isDraggingInternally) {\n                        if (\n                          draggedRange &&\n                          !Range.equals(draggedRange, range) &&\n                          !Editor.void(editor, { at: range, voids: true })\n                        ) {\n                          Transforms.delete(editor, {\n                            at: draggedRange,\n                          })\n                        }\n                      }\n\n                      ReactEditor.insertData(editor, data)\n\n                      // When dragging from another source into the editor, it's possible\n                      // that the current editor does not have focus.\n                      if (!ReactEditor.isFocused(editor)) {\n                        ReactEditor.focus(editor)\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onDrop, state]\n                )}\n                onDragEnd={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      state.isDraggingInternally &&\n                      attributes.onDragEnd &&\n                      ReactEditor.hasTarget(editor, event.target)\n                    ) {\n                      attributes.onDragEnd(event)\n                    }\n                  },\n                  [readOnly, state, attributes, editor]\n                )}\n                onFocus={useCallback(\n                  (event: React.FocusEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      !state.isUpdatingSelection &&\n                      ReactEditor.hasEditableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onFocus)\n                    ) {\n                      const el = ReactEditor.toDOMNode(editor, editor)\n                      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                      state.latestElement = root.activeElement\n\n                      // COMPAT: If the editor has nested editable elements, the focus\n                      // can go to them. In Firefox, this must be prevented because it\n                      // results in issues with keyboard navigation. (2017/03/30)\n                      if (IS_FIREFOX && event.target !== el) {\n                        el.focus()\n                        return\n                      }\n\n                      IS_FOCUSED.set(editor, true)\n                    }\n                  },\n                  [readOnly, state, editor, attributes.onFocus]\n                )}\n                onKeyDown={useCallback(\n                  (event: React.KeyboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasEditableTarget(editor, event.target)\n                    ) {\n                      androidInputManagerRef.current?.handleKeyDown(event)\n\n                      const { nativeEvent } = event\n\n                      // COMPAT: The composition end event isn't fired reliably in all browsers,\n                      // so we sometimes might end up stuck in a composition state even though we\n                      // aren't composing any more.\n                      if (\n                        ReactEditor.isComposing(editor) &&\n                        nativeEvent.isComposing === false\n                      ) {\n                        IS_COMPOSING.set(editor, false)\n                        setIsComposing(false)\n                      }\n\n                      if (\n                        isEventHandled(event, attributes.onKeyDown) ||\n                        ReactEditor.isComposing(editor)\n                      ) {\n                        return\n                      }\n\n                      const { selection } = editor\n                      const element =\n                        editor.children[\n                          selection !== null ? selection.focus.path[0] : 0\n                        ]\n                      const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                      // COMPAT: Since we prevent the default behavior on\n                      // `beforeinput` events, the browser doesn't think there's ever\n                      // any history stack to undo or redo, so we have to manage these\n                      // hotkeys ourselves. (2019/11/06)\n                      if (Hotkeys.isRedo(nativeEvent)) {\n                        event.preventDefault()\n                        const maybeHistoryEditor: any = editor\n\n                        if (typeof maybeHistoryEditor.redo === 'function') {\n                          maybeHistoryEditor.redo()\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isUndo(nativeEvent)) {\n                        event.preventDefault()\n                        const maybeHistoryEditor: any = editor\n\n                        if (typeof maybeHistoryEditor.undo === 'function') {\n                          maybeHistoryEditor.undo()\n                        }\n\n                        return\n                      }\n\n                      // COMPAT: Certain browsers don't handle the selection updates\n                      // properly. In Chrome, the selection isn't properly extended.\n                      // And in Firefox, the selection isn't properly collapsed.\n                      // (2017/10/17)\n                      if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line', reverse: true })\n                        return\n                      }\n\n                      if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line' })\n                        return\n                      }\n\n                      if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, {\n                          unit: 'line',\n                          edge: 'focus',\n                          reverse: true,\n                        })\n                        return\n                      }\n\n                      if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                        return\n                      }\n\n                      // COMPAT: If a void node is selected, or a zero-width text node\n                      // adjacent to an inline is selected, we need to handle these\n                      // hotkeys manually because browsers won't be able to skip over\n                      // the void node with the zero-width space not being an empty\n                      // string.\n                      if (Hotkeys.isMoveBackward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isCollapsed(selection)) {\n                          Transforms.move(editor, { reverse: !isRTL })\n                        } else {\n                          Transforms.collapse(editor, {\n                            edge: isRTL ? 'end' : 'start',\n                          })\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isMoveForward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isCollapsed(selection)) {\n                          Transforms.move(editor, { reverse: isRTL })\n                        } else {\n                          Transforms.collapse(editor, {\n                            edge: isRTL ? 'start' : 'end',\n                          })\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isExpanded(selection)) {\n                          Transforms.collapse(editor, { edge: 'focus' })\n                        }\n\n                        Transforms.move(editor, {\n                          unit: 'word',\n                          reverse: !isRTL,\n                        })\n                        return\n                      }\n\n                      if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isExpanded(selection)) {\n                          Transforms.collapse(editor, { edge: 'focus' })\n                        }\n\n                        Transforms.move(editor, {\n                          unit: 'word',\n                          reverse: isRTL,\n                        })\n                        return\n                      }\n\n                      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                      // fall back to guessing at the input intention for hotkeys.\n                      // COMPAT: In iOS, some of these hotkeys are handled in the\n                      if (!HAS_BEFORE_INPUT_SUPPORT) {\n                        // We don't have a core behavior for these, but they change the\n                        // DOM if we don't prevent them, so we have to.\n                        if (\n                          Hotkeys.isBold(nativeEvent) ||\n                          Hotkeys.isItalic(nativeEvent) ||\n                          Hotkeys.isTransposeCharacter(nativeEvent)\n                        ) {\n                          event.preventDefault()\n                          return\n                        }\n\n                        if (Hotkeys.isSoftBreak(nativeEvent)) {\n                          event.preventDefault()\n                          Editor.insertSoftBreak(editor)\n                          return\n                        }\n\n                        if (Hotkeys.isSplitBlock(nativeEvent)) {\n                          event.preventDefault()\n                          Editor.insertBreak(editor)\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor)\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor)\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor, { unit: 'line' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor, { unit: 'line' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor, { unit: 'word' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor, { unit: 'word' })\n                          }\n\n                          return\n                        }\n                      } else {\n                        if (IS_CHROME || IS_WEBKIT) {\n                          // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                          // an event when deleting backwards in a selected void inline node\n                          if (\n                            selection &&\n                            (Hotkeys.isDeleteBackward(nativeEvent) ||\n                              Hotkeys.isDeleteForward(nativeEvent)) &&\n                            Range.isCollapsed(selection)\n                          ) {\n                            const currentNode = Node.parent(\n                              editor,\n                              selection.anchor.path\n                            )\n\n                            if (\n                              Element.isElement(currentNode) &&\n                              Editor.isVoid(editor, currentNode) &&\n                              (Editor.isInline(editor, currentNode) ||\n                                Editor.isBlock(editor, currentNode))\n                            ) {\n                              event.preventDefault()\n                              Editor.deleteBackward(editor, { unit: 'block' })\n\n                              return\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onKeyDown]\n                )}\n                onPaste={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasEditableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onPaste)\n                    ) {\n                      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                      // fall back to React's `onPaste` here instead.\n                      // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                      // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                      // COMPAT: Safari InputEvents generated by pasting won't include\n                      // application/x-slate-fragment items, so use the\n                      // ClipboardEvent here. (2023/03/15)\n                      if (\n                        !HAS_BEFORE_INPUT_SUPPORT ||\n                        isPlainTextOnlyPaste(event.nativeEvent) ||\n                        IS_WEBKIT\n                      ) {\n                        event.preventDefault()\n                        ReactEditor.insertData(editor, event.clipboardData)\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onPaste]\n                )}\n              >\n                <Children\n                  decorations={decorations}\n                  node={editor}\n                  renderElement={renderElement}\n                  renderPlaceholder={renderPlaceholder}\n                  renderLeaf={renderLeaf}\n                  selection={editor.selection}\n                />\n              </Component>\n            </RestoreDOM>\n          </DecorateContext.Provider>\n        </ComposingContext.Provider>\n      </ReadOnlyContext.Provider>\n    )\n  }\n)\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefCallback<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => DecoratedRange[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if the event's target is an input element\n */\nexport const isDOMEventTargetInput = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType\n) => {\n  return (\n    isDOMNode(event.target) &&\n    (event.target instanceof HTMLInputElement ||\n      event.target instanceof HTMLTextAreaElement)\n  )\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n", "import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>(null as any as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          if (err instanceof Error) {\n            latestSubscriptionCallbackError.current = err\n          } else {\n            latestSubscriptionCallbackError.current = new Error(String(err))\n          }\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function useSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback(\n    (editor: Editor) => {\n      slateRef.editor = editor\n      eventListeners.forEach((listener: EditorChangeHandler) =>\n        listener(editor)\n      )\n    },\n    [eventListeners, slateRef]\n  )\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n", "import React from 'react'\n\nexport const REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10)\n", "import React, { useCallback, useEffect, useState } from 'react'\nimport { Descendant, Editor, Node, Operation, Scrubber, Selection } from 'slate'\nimport { EDITOR_TO_ON_CHANGE } from 'slate-dom'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { SlateContext, SlateContextValue } from '../hooks/use-slate'\nimport {\n  useSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  initialValue: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n  onSelectionChange?: (selection: Selection) => void\n  onValueChange?: (value: Descendant[]) => void\n}) => {\n  const {\n    editor,\n    children,\n    onChange,\n    onSelectionChange,\n    onValueChange,\n    initialValue,\n    ...rest\n  } = props\n\n  const [context, setContext] = React.useState<SlateContextValue>(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\n        `[Slate] initialValue is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          initialValue\n        )}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n    editor.children = initialValue\n    Object.assign(editor, rest)\n    return { v: 0, editor }\n  })\n\n  const { selectorContext, onChange: handleSelectorChange } =\n    useSelectorContext(editor)\n\n  const onContextChange = useCallback(\n    (options?: { operation?: Operation }) => {\n      if (onChange) {\n        onChange(editor.children)\n      }\n\n      switch (options?.operation?.type) {\n        case 'set_selection':\n          onSelectionChange?.(editor.selection)\n          break\n        default:\n          onValueChange?.(editor.children)\n      }\n\n      setContext(prevContext => ({\n        v: prevContext.v + 1,\n        editor,\n      }))\n      handleSelectorChange(editor)\n    },\n    [editor, handleSelectorChange, onChange, onSelectionChange, onValueChange]\n  )\n\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [editor, onContextChange])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  }, [editor])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={context.editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n", "import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n", "import ReactDOM from 'react-dom'\nimport { BaseEditor } from 'slate'\nimport { withDOM } from 'slate-dom'\nimport { ReactEditor } from './react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\nexport const withReact = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & ReactEditor => {\n  let e = editor as T & ReactEditor\n\n  e = withDOM(e, clipboardFormatKey)\n\n  const { onChange } = e\n\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    const maybeBatchUpdates =\n      REACT_MAJOR_VERSION < 18\n        ? ReactDOM.unstable_batchedUpdates\n        : (callback: () => void) => callback()\n\n    maybeBatchUpdates(() => {\n      onChange(options)\n    })\n  }\n\n  return e\n}\n"],
  "mappings": "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",
  "names": ["debounce", "time", "debounce", "throttle", "isHotkey", "check", "e", "isElement", "el", "nodeType", "canOverflow", "overflow", "skipOverflowHiddenElements", "isScrollable", "clientHeight", "scrollHeight", "clientWidth", "scrollWidth", "style", "getComputedStyle", "overflowY", "overflowX", "frame", "ownerDocument", "defaultView", "frameElement", "e", "alignNearest", "scrollingEdgeStart", "scrollingEdgeEnd", "scrollingSize", "scrollingBorderStart", "scrollingBorderEnd", "elementEdgeStart", "elementEdgeEnd", "elementSize", "getParentElement", "element", "parent", "parentElement", "getRootNode", "host", "compute", "target", "options", "_a", "_b", "_c", "_d", "document", "scrollMode", "block", "inline", "boundary", "checkBoundary", "node", "TypeError", "scrollingElement", "documentElement", "frames", "cursor", "push", "body", "viewportWidth", "window", "visualViewport", "width", "innerWidth", "viewportHeight", "height", "innerHeight", "scrollX", "scrollY", "targetHeight", "targetWidth", "top", "targetTop", "right", "targetRight", "bottom", "targetBottom", "left", "targetLeft", "getBoundingClientRect", "marginTop", "marginRight", "marginBottom", "marginLeft", "computedStyle", "parseFloat", "scrollMarginTop", "scrollMarginRight", "scrollMarginBottom", "scrollMarginLeft", "targetBlock", "targetInline", "computations", "index", "length", "frameStyle", "borderLeft", "parseInt", "borderLeftWidth", "borderTop", "borderTopWidth", "borderRight", "borderRightWidth", "borderBottom", "borderBottomWidth", "blockScroll", "inlineScroll", "scrollbarWidth", "offsetWidth", "scrollbarHeight", "offsetHeight", "scaleX", "scaleY", "Math", "max", "scrollLeft", "scrollTop", "min", "getOptions", "options", "block", "inline", "Object", "keys", "length", "scrollIntoView", "target", "isConnected", "element", "currentElement", "parentNode", "document", "ShadowRoot", "host", "margins", "computedStyle", "window", "getComputedStyle", "top", "parseFloat", "scrollMarginTop", "right", "scrollMarginRight", "bottom", "scrollMarginBottom", "left", "scrollMarginLeft", "behavior", "compute", "el", "adjustedTop", "adjustedLeft", "scroll", "DOMNode", "globalThis", "Node", "DOMElement", "Element", "DOMText", "Text", "DOMRange", "Range", "DOMSelection", "Selection", "DOMStaticRange", "StaticRange", "getDefaultView", "value", "ownerDocument", "defaultView", "isDOMComment", "isDOMNode", "nodeType", "isDOMElement", "window", "isDOMSelection", "anchorNode", "isDOMText", "isPlainTextOnlyPaste", "event", "clipboardData", "getData", "types", "length", "normalizeDOMPoint", "domPoint", "node", "offset", "childNodes", "isLast", "index", "getEditableChildAndIndex", "i", "getEditableChild", "textContent", "hasShadowRoot", "parent", "parentNode", "toString", "direction", "child", "triedForward", "triedBackward", "getAttribute", "getPlainText", "domNode", "text", "nodeValue", "childNode", "Array", "from", "display", "getComputedStyle", "getPropertyValue", "tagName", "catchSlateFragment", "getSlateFragmentAttribute", "dataTransfer", "htmlData", "fragment", "match", "getSelection", "root", "document", "isTrackedMutation", "editor", "mutation", "batch", "target", "matches", "DOMEditor", "getWindow", "contains", "hasDOMNode", "editable", "parentMutation", "find", "_ref", "addedNodes", "removedNodes", "getActiveElement", "activeElement", "_activeElement", "shadowRoot", "_activeElement$shadow", "_activeElement2", "isBefore", "otherNode", "Boolean", "compareDocumentPosition", "DOCUMENT_POSITION_PRECEDING", "isAfter", "DOCUMENT_POSITION_FOLLOWING", "IS_IOS", "navigator", "test", "userAgent", "MSStream", "IS_APPLE", "IS_ANDROID", "IS_FIREFOX", "IS_WEBKIT", "IS_EDGE_LEGACY", "IS_CHROME", "IS_CHROME_LEGACY", "IS_ANDROID_CHROME_LEGACY", "IS_FIREFOX_LEGACY", "IS_UC_MOBILE", "IS_WECHATBROWSER", "CAN_USE_DOM", "createElement", "_navigator$userAgent$", "parseInt", "_navigator$userAgent$2", "HAS_BEFORE_INPUT_SUPPORT", "InputEvent", "prototype", "getTargetRanges", "o", "toPrimitive", "toPropertyKey", "n", "Key", "constructor", "_defineProperty", "id", "concat", "IS_NODE_MAP_DIRTY", "WeakMap", "NODE_TO_INDEX", "NODE_TO_PARENT", "EDITOR_TO_WINDOW", "EDITOR_TO_ELEMENT", "EDITOR_TO_PLACEHOLDER_ELEMENT", "ELEMENT_TO_NODE", "NODE_TO_ELEMENT", "NODE_TO_KEY", "EDITOR_TO_KEY_TO_ELEMENT", "IS_READ_ONLY", "IS_FOCUSED", "IS_COMPOSING", "EDITOR_TO_USER_SELECTION", "EDITOR_TO_ON_CHANGE", "EDITOR_TO_SCHEDULE_FLUSH", "EDITOR_TO_PENDING_INSERTION_MARKS", "EDITOR_TO_USER_MARKS", "EDITOR_TO_PENDING_DIFFS", "EDITOR_TO_PENDING_ACTION", "EDITOR_TO_PENDING_SELECTION", "EDITOR_TO_FORCE_RENDER", "PLACEHOLDER_SYMBOL", "Symbol", "MARK_PLACEHOLDER_SYMBOL", "androidPendingDiffs", "get", "androidScheduleFlush", "_EDITOR_TO_SCHEDULE_F", "blur", "el", "toDOMNode", "findDocumentOrShadowRoot", "set", "deselect", "selection", "domSelection", "rangeCount", "removeAllRanges", "Transforms", "getRootNode", "Document", "ShadowRoot", "findEventRange", "nativeEvent", "clientX", "x", "clientY", "y", "Error", "toSlateNode", "path", "findPath", "isElement", "Editor", "isVoid", "rect", "getBoundingClientRect", "isPrev", "isInline", "left", "width", "top", "height", "edge", "point", "before", "after", "range", "domRange", "caretRangeFromPoint", "position", "caretPositionFromPoint", "createRange", "setStart", "offsetNode", "setEnd", "toSlateRange", "exactMatch", "suppressThrow", "findKey", "key", "isEditor", "unshift", "Scrubber", "stringify", "focus", "options", "arguments", "undefined", "retries", "operations", "setTimeout", "toDOMRange", "addRange", "select", "start", "preventScroll", "editorEl", "targetEl", "parentElement", "err", "message", "includes", "closest", "isContentEditable", "hasEditableTarget", "hasRange", "anchor", "hasPath", "hasSelectableTarget", "isTargetInsideNonReadonlyVoid", "hasTarget", "insertData", "data", "insertFragmentData", "insertTextData", "isComposing", "isFocused", "isReadOnly", "slateNode", "setFragmentData", "originEvent", "KEY_TO_ELEMENT", "toDOMPoint", "void", "at", "selector", "texts", "querySelectorAll", "attr", "trueLength", "end", "nextText", "hasAttribute", "_nextText$textContent", "domText", "startsWith", "Math", "min", "max", "isBackward", "domAnchor", "domFocus", "isCollapsed", "startNode", "startOffset", "endNode", "endOffset", "startEl", "isStartAtZeroWidth", "endEl", "isEndAtZeroWidth", "domEl", "toSlatePoint", "searchDirection", "nearestNode", "nearestOffset", "textNode", "_domNode$textContent", "_domNode$textContent2", "potentialVoidNode", "voidNode", "potentialNonEditableNode", "nonEditableNode", "leafNode", "contents", "cloneContents", "removals", "slice", "call", "forEach", "textContext", "removeChild", "leafNodes", "current", "getLeafNodes", "elementNode", "_leafNodes$find", "nextElementSibling", "leaf", "_leafNodes2$findLast", "previousElementSibling", "findLast", "endsWith", "querySelector", "_focusNode$textConten", "startContainer", "anchorOffset", "focusNode", "focusOffset", "firstRange", "getRangeAt", "lastRange", "HTMLTableRowElement", "getLastChildren", "element", "childElementCount", "children", "firstNodeRow", "lastNodeRow", "firstNode", "lastNode", "HTMLElement", "innerHTML", "endContainer", "collapsed", "focusBeforeAnchor", "isExpanded", "isForward", "mode", "unhangRange", "voids", "verifyDiffState", "textDiff", "diff", "isText", "nextPath", "Path", "next", "nextNode", "applyStringDiff", "_len", "diffs", "_key", "reduce", "longestCommonPrefixLength", "str", "another", "charAt", "longestCommonSuffixLength", "normalizeStringDiff", "targetText", "removedText", "prefixLength", "suffixLength", "normalized", "mergeStringDiffs", "a", "b", "overlap", "applied", "sliceEnd", "targetRange", "normalizePoint", "parentBlock", "above", "isBlock", "entry", "isDescendant", "normalizeRange", "transformPendingPoint", "op", "pendingDiffs", "equals", "Point", "transform", "affinity", "transformed", "type", "transformPendingRange", "transformTextDiff", "newPath", "doRectsIntersect", "compareRect", "middle", "bottom", "areRangesSameLine", "range1", "range2", "rect1", "rect2", "findCurrentLineRange", "parentRange", "parentRangeBoundary", "positions", "right", "floor", "withDOM", "clipboardFormatKey", "e", "apply", "onChange", "deleteBackward", "addMark", "removeMark", "_EDITOR_TO_PENDING_DI", "delete", "_EDITOR_TO_PENDING_DI2", "unit", "parentBlockEntry", "parentBlockPath", "parentElementRange", "currentLineRange", "pathRefMatches", "map", "filter", "pendingSelection", "pendingAction", "isPoint", "_objectSpread", "push", "getMatches", "_EDITOR_TO_USER_SELEC", "unref", "prevPath", "previous", "commonPath", "common", "changedPath", "changedNode", "changedNodeKey", "changedPathRef", "pathRef", "edges", "startVoid", "endVoid", "attach", "trim", "r", "cloneRange", "setEndAfter", "zw", "isNewline", "span", "style", "whiteSpace", "appendChild", "getFragment", "string", "JSON", "encoded", "btoa", "encodeURIComponent", "setAttribute", "setData", "div", "body", "decoded", "decodeURIComponent", "atob", "parsed", "parse", "insertFragment", "lines", "split", "line", "splitNodes", "always", "insertText", "onContextChange", "p", "levels", "TRIPLE_CLICK", "HOTKEYS", "bold", "compose", "moveBackward", "moveForward", "moveWordBackward", "moveWordForward", "deleteForward", "extendBackward", "extendForward", "italic", "insertSoftBreak", "splitBlock", "undo", "APPLE_HOTKEYS", "moveLineBackward", "moveLineForward", "deleteLineBackward", "deleteLineForward", "deleteWordBackward", "deleteWordForward", "extendLineBackward", "extendLineForward", "redo", "transposeCharacter", "WINDOWS_HOTKEYS", "create", "generic", "apple", "windows", "isGeneric", "isHotkey", "isApple", "isWindows", "isBold", "isCompose", "isMoveBackward", "isMoveForward", "isDeleteBackward", "isDeleteForward", "isDeleteLineBackward", "isDeleteLineForward", "isDeleteWordBackward", "isDeleteWordForward", "isExtendBackward", "isExtendForward", "isExtendLineBackward", "isExtendLineForward", "isItalic", "isMoveLineBackward", "isMoveLineForward", "isMoveWordBackward", "isMoveWordForward", "isRedo", "isSoftBreak", "isSplitBlock", "isTransposeCharacter", "isUndo", "objectWithoutPropertiesLoose", "shallowCompare", "obj1", "obj2", "Object", "keys", "every", "hasOwnProperty", "isDecorationFlagsEqual", "other", "rangeOwnProps", "_objectWithoutProperties", "_excluded", "otherOwnProps", "_excluded2", "isElementDecorationsEqual", "list", "isTextDecorationsEqual", "ResizeObserverBoxOptions", "ResizeObserverSize", "DOMRectReadOnly", "ResizeObserverEntry", "callbacks", "ResizeObserver", "Scheduler", "n", "ResizeObservation", "size", "ResizeObserverDetail", "ResizeObserverController", "ResizeObserver", "_objectWithoutPropertiesLoose", "_objectWithoutProperties", "objectWithoutPropertiesLoose", "_typeof", "o", "_toPrimitive", "_toPropertyKey", "toPrimitive", "_defineProperty", "toPropertyKey", "EditorContext", "createContext", "useSlateStatic", "editor", "useContext", "Error", "ReactEditor", "DOMEditor", "RESOLVE_DELAY", "FLUSH_DELAY", "debug", "isDataTransfer", "value", "constructor", "name", "createAndroidInputManager", "_ref", "scheduleOnDOMSelectionChange", "onDOMSelectionChange", "flushing", "compositionEndTimeoutId", "flushTimeoutId", "actionTimeoutId", "idCounter", "insertPositionHint", "applyPendingSelection", "pendingSelection", "EDITOR_TO_PENDING_SELECTION", "get", "delete", "selection", "normalized", "normalizeRange", "Range", "equals", "Transforms", "select", "performAction", "action", "EDITOR_TO_PENDING_ACTION", "at", "target", "Point", "isPoint", "normalizePoint", "targetRange", "Editor", "range", "run", "flush", "clearTimeout", "hasPendingDiffs", "hasPendingAction", "setTimeout", "selectionRef", "rangeRef", "affinity", "EDITOR_TO_USER_MARKS", "set", "marks", "EDITOR_TO_PENDING_DIFFS", "scheduleSelectionChange", "diff", "_EDITOR_TO_PENDING_DI", "_EDITOR_TO_PENDING_DI2", "pendingMarks", "EDITOR_TO_PENDING_INSERTION_MARKS", "undefined", "text", "insertText", "deleteFragment", "filter", "_ref2", "id", "verifyDiffState", "cancel", "unref", "userMarks", "onChange", "handleCompositionEnd", "_event", "IS_COMPOSING", "handleCompositionStart", "updatePlaceholderVisibility", "forceHide", "arguments", "length", "placeholderElement", "EDITOR_TO_PLACEHOLDER_ELEMENT", "style", "display", "removeProperty", "storeDiff", "path", "_EDITOR_TO_PENDING_DI3", "pendingDiffs", "Node", "leaf", "idx", "findIndex", "change", "Path", "normalizeStringDiff", "push", "merged", "mergeStringDiffs", "splice", "_objectSpread", "scheduleAction", "handleDOMBeforeInput", "event", "_targetRange2", "IS_NODE_MAP_DIRTY", "inputType", "type", "data", "dataTransfer", "nativeTargetRange", "getTargetRanges", "toSlateRange", "exactMatch", "suppressThrow", "window", "getWindow", "domSelection", "getSelection", "canStoreDiff", "startsWith", "isExpanded", "start", "end", "edges", "offset", "next", "match", "Text", "isText", "anchor", "focus", "direction", "endsWith", "relevantPendingDiffs", "find", "diffs", "applyStringDiff", "point", "handleUserSelect", "isCollapsed", "targetNode", "deleteForward", "_nativeTargetRange", "nativeCollapsed", "isDOMSelection", "collapsed", "deleteBackward", "unit", "insertSoftBreak", "insertBreak", "insertData", "replace", "test", "slice", "includes", "parts", "split", "forEach", "line", "i", "hintPosition", "search", "diffPosition", "scheduleFlush", "_EDITOR_TO_PENDING_DI4", "hasPendingChanges", "isFlushing", "pathChanged", "parentPathChanged", "handleInput", "handleKeyDown", "_", "handleDomMutations", "mutations", "some", "mutation", "isTrackedMutation", "_EDITOR_TO_FORCE_REND", "EDITOR_TO_FORCE_RENDER", "useIsMounted", "isMountedRef", "useRef", "useEffect", "current", "useIsomorphicLayoutEffect", "CAN_USE_DOM", "useLayoutEffect", "useMutationObserver", "node", "callback", "options", "mutationObserver", "useState", "MutationObserver", "takeRecords", "observe", "disconnect", "MUTATION_OBSERVER_CONFIG", "subtree", "childList", "characterData", "useAndroidInputManager", "IS_ANDROID", "_excluded", "isMounted", "inputManager", "EDITOR_TO_SCHEDULE_FLUSH", "String", "props", "isLast", "parent", "findPath", "parentPath", "isMarkPlaceholder", "Boolean", "MARK_PLACEHOLDER_SYMBOL", "isVoid", "React", "createElement", "ZeroWidthString", "string", "children", "isInline", "isLineBreak", "TextString", "isTrailing", "ref", "getTextContent", "concat", "initialText", "textWithTrailing", "textContent", "MemoizedText", "memo", "forwardRef", "attributes", "IS_IOS", "PLACEHOLDER_DELAY", "disconnectPlaceholderResizeObserver", "placeholderResizeObserver", "releaseObserver", "clearTimeoutRef", "timeoutRef", "Leaf", "renderPlaceholder", "renderLeaf", "DefaultLeaf", "placeholderRef", "showPlaceholder", "setShowPlaceholder", "showPlaceholderTimeoutRef", "callbackPlaceholderRef", "useCallback", "placeholderEl", "_leaf$onPlaceholderRe", "onPlaceholderResize", "call", "ResizeObserver", "ResizeObserverPolyfill", "_leaf$onPlaceholderRe2", "leafIsPlaceholder", "PLACEHOLDER_SYMBOL", "placeholderProps", "placeholder", "position", "top", "pointerEvents", "width", "maxWidth", "opacity", "userSelect", "textDecoration", "WebkitUserModify", "IS_WEBKIT", "contentEditable", "Fragment", "MemoizedLeaf", "prev", "decorations", "leaves", "SlateText", "key", "findKey", "callbackRef", "span", "KEY_TO_ELEMENT", "EDITOR_TO_KEY_TO_ELEMENT", "NODE_TO_ELEMENT", "ELEMENT_TO_NODE", "isTextDecorationsEqual", "Element", "element", "renderElement", "p", "DefaultElement", "readOnly", "useReadOnly", "useChildren", "hasInlines", "dir", "getDirection", "Tag", "texts", "height", "color", "outline", "NODE_TO_INDEX", "NODE_TO_PARENT", "MemoizedElement", "isElementDecorationsEqual", "DecorateContext", "useDecorate", "SelectedContext", "useSelected", "decorate", "isLeafBlock", "isElement", "n", "sel", "intersection", "ds", "dec", "d", "Provider", "ElementComponent", "TextComponent", "ReadOnlyContext", "SlateContext", "useSlate", "context", "useSlateWithV", "useTrackUserInput", "receivedUserInput", "animationFrameIdRef", "onUserInput", "cancelAnimationFrame", "requestAnimationFrame", "createRestoreDomManager", "bufferedMutations", "clear", "registerMutations", "trackedMutations", "restoreDOM", "reverse", "removedNodes", "insertBefore", "nextSibling", "addedNodes", "removeChild", "characterDataOldValue", "RestoreDOMComponent", "Component", "_this$mutationObserve", "componentDidMount", "manager", "getSnapshotBeforeUpdate", "_this$mutationObserve2", "_this$mutationObserve3", "_this$manager2", "pendingMutations", "_this$manager", "componentDidUpdate", "_this$manager3", "componentWillUnmount", "_this$mutationObserve4", "render", "RestoreDOM", "ComposingContext", "useComposing", "Children", "Editable", "forwardedRef", "defaultRenderPlaceholder", "DefaultPlaceholder", "autoFocus", "defaultDecorate", "onDOMBeforeInput", "propsOnDOMBeforeInput", "scrollSelectionIntoView", "defaultScrollSelectionIntoView", "userStyle", "as", "disableDefaultStyles", "isComposing", "setIsComposing", "deferredOperations", "placeholderHeight", "setPlaceholderHeight", "processing", "forceRender", "useReducer", "s", "IS_READ_ONLY", "state", "useMemo", "isDraggingInternally", "isUpdatingSelection", "latestElement", "hasMarkPlaceholder", "androidInputManagerRef", "throttle", "el", "toDOMNode", "root", "getRootNode", "ShadowRoot", "active", "getActiveElement", "document", "execCommand", "deselect", "androidInputManager", "findDocumentOrShadowRoot", "activeElement", "IS_FOCUSED", "anchorNode", "focusNode", "anchorNodeSelectable", "hasEditableTarget", "isTargetInsideNonReadonlyVoid", "focusNodeInEditor", "hasTarget", "debounce", "_androidInputManagerR", "_androidInputManagerR2", "getDefaultView", "EDITOR_TO_WINDOW", "EDITOR_TO_ELEMENT", "isFocused", "setDomSelection", "forceChange", "hasDomSelection", "IS_FIREFOX", "rangeCount", "firstRange", "getRangeAt", "lastRange", "startContainer", "endContainer", "editorElement", "hasDomSelectionInEditor", "contains", "slateRange", "_anchorNode", "parentElement", "hasAttribute", "hasRange", "newDomRange", "toDOMRange", "e", "collapseToEnd", "isBackward", "setBaseAndExtent", "endOffset", "startOffset", "removeAllRanges", "ensureSelection", "timeoutId", "animationFrameId", "ensureDomSelection", "ranges", "newRange", "setStart", "setEnd", "preventDefault", "stopImmediatePropagation", "isDOMEventHandled", "_EDITOR_TO_USER_SELEC", "isCompositionChange", "native", "_node$parentElement", "_window$getComputedSt", "toDOMPoint", "closest", "hasDOMNode", "_lastText$textContent", "lastText", "createTreeWalker", "NodeFilter", "SHOW_TEXT", "lastChild", "getComputedStyle", "whiteSpace", "block", "above", "isBlock", "EDITOR_TO_USER_SELECTION", "toRestore", "HAS_BEFORE_INPUT_SUPPORT", "removeEventListener", "addEventListener", "onSelectionChange", "targetElement", "HTMLElement", "targetTagName", "tagName", "stoppedDragging", "Array", "from", "placeHolderResizeHandler", "_placeholderEl$getBou", "getBoundingClientRect", "rest", "_excluded2", "loose", "unset", "Object", "fromEntries", "keys", "map", "mark", "role", "spellCheck", "autoCorrect", "autoCapitalize", "zindex", "suppressContentEditableWarning", "wordWrap", "minHeight", "onBeforeInput", "isEventHandled", "hasSelectableTarget", "onInput", "op", "nativeEvent", "maybeHistoryEditor", "undo", "redo", "onBlur", "relatedTarget", "isDOMElement", "isDOMNode", "toSlateNode", "onClick", "hasPath", "detail", "TRIPLE_CLICK", "blockPath", "_block$", "startVoid", "void", "endVoid", "onCompositionEnd", "_androidInputManagerR3", "Promise", "resolve", "then", "IS_FIREFOX_LEGACY", "IS_WECHATBROWSER", "IS_UC_MOBILE", "placeholderMarks", "onCompositionUpdate", "onCompositionStart", "_androidInputManagerR4", "onCopy", "isDOMEventTargetInput", "setFragmentData", "clipboardData", "onCut", "onDragOver", "onDragStart", "voidMatch", "voids", "onDrop", "draggedRange", "findEventRange", "onDragEnd", "onFocus", "onKeyDown", "_androidInputManagerR5", "isRTL", "Hotkeys", "isRedo", "isUndo", "isMoveLineBackward", "move", "isMoveLineForward", "isExtendLineBackward", "edge", "isExtendLineForward", "isMoveBackward", "collapse", "isMoveForward", "isMoveWordBackward", "isMoveWordForward", "isBold", "isItalic", "isTransposeCharacter", "isSoftBreak", "isSplitBlock", "isDeleteBackward", "isDeleteForward", "isDeleteLineBackward", "isDeleteLineForward", "isDeleteWordBackward", "isDeleteWordForward", "IS_CHROME", "currentNode", "onPaste", "isPlainTextOnlyPaste", "domRange", "leafEl", "bind", "scrollIntoView", "scrollMode", "handler", "shouldTreatEventAsHandled", "isDefaultPrevented", "isPropagationStopped", "HTMLInputElement", "HTMLTextAreaElement", "defaultPrevented", "FocusedContext", "useFocused", "isError", "error", "SlateSelectorContext", "refEquality", "a", "b", "useSlateSelector", "selector", "equalityFn", "getSlate", "latestSubscriptionCallbackError", "latestSelector", "latestSelectedState", "selectedState", "err", "message", "stack", "checkForUpdates", "newSelectedState", "unsubscribe", "useSelectorContext", "eventListeners", "slateRef", "listener", "selectorContext", "indexOf", "REACT_MAJOR_VERSION", "parseInt", "version", "Slate", "onValueChange", "initialValue", "setContext", "isNodeList", "Scrubber", "stringify", "isEditor", "assign", "v", "handleSelectorChange", "onContextChange", "_options$operation", "operation", "prevContext", "EDITOR_TO_ON_CHANGE", "setIsFocused", "fn", "useEditor", "useSlateSelection", "isSelectionEqual", "withReact", "clipboardFormatKey", "withDOM", "maybeBatchUpdates", "ReactDOM", "unstable_batchedUpdates"]
}
